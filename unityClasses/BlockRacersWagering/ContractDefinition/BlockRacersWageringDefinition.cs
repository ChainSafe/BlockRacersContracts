using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace BlockRacersWagering.BlockRacersWagering.ContractDefinition
{


    public partial class BlockRacersWageringDeployment : BlockRacersWageringDeploymentBase
    {
        public BlockRacersWageringDeployment() : base(BYTECODE) { }
        public BlockRacersWageringDeployment(string byteCode) : base(byteCode) { }
    }

    public class BlockRacersWageringDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "0x60c06040523462000089576200001f62000018620001bf565b91620001e7565b620000296200008f565b612c6b620004d1823960805181611685015260a0518181816108c901528181610db6015281816112b20152818161134f0152818161138e0152818161183101528181611ca001528181611e7a01528181611f470152611f860152612c6b90f35b62000095565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b90620000c6906200009a565b810190811060018060401b03821117620000df57604052565b620000a4565b90620000fc620000f46200008f565b9283620000ba565b565b600080fd5b60018060a01b031690565b620001199062000103565b90565b62000127816200010e565b036200012f57565b600080fd5b9050519062000143826200011c565b565b62000150906200010e565b90565b6200015e8162000145565b036200016657565b600080fd5b905051906200017a8262000153565b565b9091606082840312620001b957620001b66200019c846000850162000134565b93620001ac816020860162000134565b936040016200016b565b90565b620000fe565b620001e26200313c80380380620001d681620000e5565b9283398101906200017c565b909192565b620001f291620001f7565b60a052565b90620002039162000262565b565b90565b90565b620002246200021e6200022a9262000205565b62000208565b62000103565b90565b62000238906200020b565b90565b62000246906200010e565b9052565b919062000260906000602085019401906200023b565b565b906200026e9062000379565b8062000290620002896200028360006200022d565b6200010e565b916200010e565b14620002a357620002a19062000463565b565b620002d4620002b360006200022d565b620002bd6200008f565b918291631e4fbdf760e01b8352600483016200024a565b0390fd5b90565b90565b620002f7620002f1620002fd92620002d8565b62000208565b620002db565b90565b6200030c6001620002de565b90565b60001b90565b9062000324600019916200030f565b9181191691161790565b62000347620003416200034d92620002db565b62000208565b620002db565b90565b90565b906200036d6200036762000375926200032e565b62000350565b825462000315565b9055565b62000384906200039c565b6200039a6200039262000300565b600062000353565b565b608052565b60001c90565b60018060a01b031690565b620003c1620003c791620003a1565b620003a7565b90565b620003d69054620003b2565b90565b90620003ec60018060a01b03916200030f565b9181191691161790565b6200040f62000409620004159262000103565b62000208565b62000103565b90565b6200042390620003f6565b90565b620004319062000418565b90565b90565b90620004516200044b620004599262000426565b62000434565b8254620003d9565b9055565b60000190565b6200046f6001620003ca565b6200047c82600162000437565b90620004b4620004ad7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09362000426565b9162000426565b91620004bf6200008f565b80620004cb816200045d565b0390a356fe60806040526004361015610013575b61097a565b61001e60003561012d565b806330da3d7e14610128578063417c73a7146101235780634a49ac4c1461011e5780634f067dc714610119578063572b6c05146101145780636cac41031461010f578063715018a61461010a5780637a2756f2146101055780637da0a877146101005780638da5cb5b146100fb5780639c37d7ea146100f6578063ad261770146100f1578063e47d6060146100ec578063eb071df2146100e7578063ef38a325146100e2578063f2fde38b146100dd5763fc0c546a0361000e57610945565b610894565b61085f565b610796565b610761565b610728565b61058b565b610556565b610521565b6104c9565b6103c0565b61038b565b6102e6565b6102b1565b61027e565b61024b565b6101b6565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b90565b61015481610148565b0361015b57565b600080fd5b9050359061016d8261014b565b565b906020828203126101895761018691600001610160565b90565b61013e565b151590565b61019c9061018e565b9052565b91906101b490600060208501940190610193565b565b346101e6576101e26101d16101cc36600461016f565b610f03565b6101d9610133565b918291826101a0565b0390f35b610139565b60018060a01b031690565b6101ff906101eb565b90565b61020b816101f6565b0361021257565b600080fd5b9050359061022482610202565b565b906020828203126102405761023d91600001610217565b90565b61013e565b60000190565b346102795761026361025e366004610226565b611005565b61026b610133565b8061027581610245565b0390f35b610139565b346102ac57610296610291366004610226565b6110c2565b61029e610133565b806102a881610245565b0390f35b610139565b346102e1576102dd6102cc6102c736600461016f565b6114ed565b6102d4610133565b918291826101a0565b0390f35b610139565b34610316576103126103016102fc366004610226565b611501565b610309610133565b918291826101a0565b0390f35b610139565b600091031261032657565b61013e565b1c90565b90565b610342906008610347930261032b565b61032f565b90565b906103559154610332565b90565b610365600360009061034a565b90565b61037190610148565b9052565b919061038990600060208501940190610368565b565b346103bb5761039b36600461031b565b6103b76103a6610358565b6103ae610133565b91829182610375565b0390f35b610139565b346103ee576103d036600461031b565b6103d861154d565b6103e0610133565b806103ea81610245565b0390f35b610139565b6103fc90610148565b9052565b610409906101f6565b9052565b634e487b7160e01b600052602160045260246000fd5b6005111561042d57565b61040d565b9061043c82610423565b565b61044790610432565b90565b6104539061043e565b9052565b906080806104b193610471600082015160008601906103f3565b61048360208201516020860190610400565b61049560408201516040860190610400565b6104a760608201516060860190610400565b015191019061044a565b565b91906104c790600060a08501940190610457565b565b346104f9576104f56104e46104df36600461016f565b611656565b6104ec610133565b918291826104b3565b0390f35b610139565b610507906101f6565b9052565b919061051f906000602085019401906104fe565b565b346105515761053136600461031b565b61054d61053c61167a565b610544610133565b9182918261050b565b0390f35b610139565b346105865761056636600461031b565b6105826105716116a7565b610579610133565b9182918261050b565b0390f35b610139565b346105bb576105b76105a66105a136600461016f565b611918565b6105ae610133565b918291826101a0565b0390f35b610139565b600080fd5b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906105f4906105ca565b810190811067ffffffffffffffff82111761060e57604052565b6105d4565b9061062661061f610133565b92836105ea565b565b67ffffffffffffffff8111610646576106426020916105ca565b0190565b6105d4565b90826000939282370152565b9092919261066c61066782610628565b610613565b93818552602085019082840111610688576106869261064b565b565b6105c5565b9080601f830112156106ab578160206106a893359101610657565b90565b6105c0565b90608082820312610723576106c88160008401610160565b926106d68260208501610217565b92604081013567ffffffffffffffff811161071e57836106f791830161068d565b92606082013567ffffffffffffffff811161071957610716920161068d565b90565b610143565b610143565b61013e565b3461075c5761075861074761073e3660046106b0565b92919091611dc2565b61074f610133565b918291826101a0565b0390f35b610139565b346107915761078d61077c610777366004610226565b611dd9565b610784610133565b918291826101a0565b0390f35b610139565b346107c6576107c26107b16107ac36600461016f565b611ffc565b6107b9610133565b918291826101a0565b0390f35b610139565b5190565b60209181520190565b60200190565b906107eb816020936103f3565b0190565b60200190565b9061081261080c610805846107cb565b80936107cf565b926107d8565b9060005b8181106108235750505090565b90919261083c61083660019286516107de565b946107ef565b9101919091610816565b61085c91602082019160008184039101526107f5565b90565b3461088f5761088b61087a610875366004610226565b6120d3565b610882610133565b91829182610846565b0390f35b610139565b346108c2576108ac6108a7366004610226565b612160565b6108b4610133565b806108be81610245565b0390f35b610139565b7f000000000000000000000000000000000000000000000000000000000000000090565b90565b6109026108fd610907926101eb565b6108eb565b6101eb565b90565b610913906108ee565b90565b61091f9061090a565b90565b61092b90610916565b9052565b919061094390600060208501940190610922565b565b346109755761095536600461031b565b6109716109606108c7565b610968610133565b9182918261092f565b0390f35b610139565b600080fd5b600090565b61098d9061090a565b90565b9061099a90610984565b600052602052604060002090565b60001c90565b60ff1690565b6109c06109c5916109a8565b6109ae565b90565b6109d290546109b4565b90565b91906109df61216b565b926109f46109ef60028690610990565b6109c8565b610a0657610a03929350610a2c565b90565b610a2884610a12610133565b91829163571f7b4960e01b83526004830161050b565b0390fd5b90610a3e91610a3961218c565b610da7565b90610a47612217565b565b610a529061090a565b90565b610a61610a66916109a8565b61032f565b90565b610a739054610a55565b90565b634e487b7160e01b600052601160045260246000fd5b610a9590610148565b6000198114610aa45760010190565b610a76565b60001b90565b90610abc60001991610aa9565b9181191691161790565b610ada610ad5610adf92610148565b6108eb565b610148565b90565b90565b90610afa610af5610b0192610ac6565b610ae2565b8254610aaf565b9055565b90565b610b1c610b17610b2192610b05565b6108eb565b6101eb565b90565b610b2d90610b08565b90565b610b3a60a0610613565b90565b90610b4790610148565b9052565b90610b55906101f6565b9052565b90610b6390610432565b9052565b90610b7190610ac6565b600052602052604060002090565b610b899051610148565b90565b610b9690516101f6565b90565b90610baa60018060a01b0391610aa9565b9181191691161790565b90565b90610bcc610bc7610bd392610984565b610bb4565b8254610b99565b9055565b610be19051610432565b90565b60a01b90565b90610bf960ff60a01b91610be4565b9181191691161790565b610c0c90610432565b90565b90565b90610c27610c22610c2e92610c03565b610c0f565b8254610bea565b9055565b90610ca960806003610caf94610c5760008201610c5160008801610b7f565b90610ae5565b610c7060018201610c6a60208801610b8c565b90610bb7565b610c8960028201610c8360408801610b8c565b90610bb7565b610ca1828201610c9b60608801610b8c565b90610bb7565b019201610bd7565b90610c12565b565b90610cbb91610c32565b565b90610cc790610984565b600052602052604060002090565b90565b600052602060002090565b634e487b7160e01b600052603260045260246000fd5b5490565b610d0681610cf9565b821015610d2157610d18600191610cd8565b91020190600090565b610ce3565b1b90565b91906008610d46910291610d4060001984610d26565b92610d26565b9181191691161790565b9190610d66610d61610d6e93610ac6565b610ae2565b908354610d2a565b9055565b9081549168010000000000000000831015610da25782610d9a916001610da095018155610cfd565b90610d50565b565b6105d4565b50610db061216b565b90610de77f000000000000000000000000000000000000000000000000000000000000000083610ddf30610a49565b908492612295565b610e03610dfc610df76003610a69565b610a8c565b6003610ae5565b610e7f81610e6584610e5c610e186000610b24565b610e53610e256000610b24565b91610e4a600195610e41610e37610b30565b9960008b01610b3d565b60208901610b4b565b60408701610b4b565b60608501610b4b565b60808301610b59565b610e7a6004610e746003610a69565b90610b67565b610cb1565b610ea6610e96610e9160058590610cbd565b610cd5565b610ea06003610a69565b90610d72565b610eb06003610a69565b919091610efb610ee9610ee37f80bc7deb6e29d5090fcfe5b637d94779a4c25606f0442f198a46c60a272d995b93610ac6565b93610984565b93610ef2610133565b91829182610375565b0390a3600190565b610f1490610f0f61097f565b6109d5565b90565b610f2890610f236122e5565b610f6f565b565b90610f3660ff91610aa9565b9181191691161790565b610f499061018e565b90565b90565b90610f64610f5f610f6b92610f40565b610f4c565b8254610f2a565b9055565b610f83610f7e60028390610990565b6109c8565b610fdf57610f9d6001610f9860028490610990565b610f4f565b610fc77ff9b68063b051b82957fa193585681240904fed808db8b30fc5a2d2202c6ed62791610984565b90610fd0610133565b80610fda81610245565b0390a2565b61100190610feb610133565b91829163d40e1aa560e01b83526004830161050b565b0390fd5b61100e90610f17565b565b6110219061101c6122e5565b611023565b565b61104061103a61103560028490610990565b6109c8565b1561018e565b61109c5761105a600061105560028490610990565b610f4f565b6110847fc121445dfc18619b882df11e54d4b1d2ac7391ea87c32aaa4d43d9b738a4a22791610984565b9061108d610133565b8061109781610245565b0390a2565b6110be906110a8610133565b918291631c16f44560e31b83526004830161050b565b0390fd5b6110cb90611010565b565b91906110d761216b565b926110ec6110e760028690610990565b6109c8565b6110fe576110fb929350611124565b90565b6111208461110a610133565b91829163571f7b4960e01b83526004830161050b565b0390fd5b906111369161113161218c565b6111f2565b9061113f612217565b565b90565b60a01c90565b60ff1690565b61115c61116191611144565b61114a565b90565b61116e9054611150565b90565b61117a9061043e565b9052565b9160206111a092949361119960408201966000830190610368565b0190611171565b565b60018060a01b031690565b6111b96111be916109a8565b6111a2565b90565b6111cb90546111ad565b90565b9160206111f09294936111e960408201966000830190610368565b01906104fe565b565b5061120761120260048390610b67565b611141565b9061121460038301611164565b6112276112216001610432565b91610432565b1415806114c6575b6114935761123b61216b565b9161124860038201611164565b61125b6112556001610432565b91610432565b14801561146d575b80611448575b80156113f7575b6000146113d15761128360038201611164565b6112966112906001610432565b91610432565b14600014611338576112f0906112b0600460038301610c12565b7f0000000000000000000000000000000000000000000000000000000000000000906112ea60006112e3600184016111c1565b9201610a69565b9161235e565b5b61133061131e7f62eb106a4fbe42c7cbd47bbf87b4fe9d81b93ade91ebf33b4d1e7d35b9268ce792610ac6565b92611327610133565b9182918261050b565b0390a2600190565b6113cc9061134a600460038301610c12565b61138c7f000000000000000000000000000000000000000000000000000000000000000061137a600184016111c1565b61138660008501610a69565b9161235e565b7f0000000000000000000000000000000000000000000000000000000000000000906113c660006113bf600284016111c1565b9201610a69565b9161235e565b6112f1565b506113f36113dd610133565b928392633dbc49ed60e21b8452600484016111ce565b0390fd5b5061140460038201611164565b6114176114116002610432565b91610432565b1480611423575b611270565b50611430600282016111c1565b61144261143c856101f6565b916101f6565b1461141e565b50611455600182016111c1565b611467611461856101f6565b916101f6565b14611269565b5061147a60038201611164565b61148d6114876002610432565b91610432565b14611263565b60036114a0919201611164565b906114c26114ac610133565b928392631b9f23ab60e21b84526004840161117e565b0390fd5b506114d360038301611164565b6114e66114e06002610432565b91610432565b141561122f565b6114fe906114f961097f565b6110cd565b90565b61150961097f565b5061152361151d61151861167a565b6101f6565b916101f6565b1490565b61152f6122e5565b611537611539565b565b61154b6115466000610b24565b6123ac565b565b611555611527565b565b61156160a0610613565b90565b600090565b600090565b600090565b61157b611557565b906020808080808661158b611564565b815201611596611569565b8152016115a1611569565b8152016115ac611569565b8152016115b761156e565b81525050565b6115c5611573565b90565b9061164861163f60036115d9611557565b946115f26115e960008301610a69565b60008801610b3d565b61160a611601600183016111c1565b60208801610b4b565b611622611619600283016111c1565b60408801610b4b565b6116396116308383016111c1565b60608801610b4b565b01611164565b60808401610b59565b565b611653906115c8565b90565b61166d611672916116656115bd565b506004610b67565b61164a565b90565b600090565b611682611675565b507f000000000000000000000000000000000000000000000000000000000000000090565b6116af611675565b506116ba60016111c1565b90565b91906116c761216b565b926116dc6116d760028690610990565b6109c8565b6116ee576116eb929350611747565b90565b611710846116fa610133565b91829163571f7b4960e01b83526004830161050b565b0390fd5b60409061173e611745949695939661173460608401986000850190610368565b6020830190611171565b0190611171565b565b91906001928161176161175c60048390610b67565b61164a565b9061176e60808301610bd7565b61178061177a88610432565b91610432565b036117955750506117929293506117ca565b90565b906117c66117a7608088949301610bd7565b926117b0610133565b938493633659650b60e11b855260048501611714565b0390fd5b906117dc916117d761218c565b6117e7565b906117e5612217565b565b506117f061216b565b9061180561180060048390610b67565b611141565b611811600182016111c1565b61182361181d856101f6565b916101f6565b146118f2576118859061186d7f00000000000000000000000000000000000000000000000000000000000000008561185a30610a49565b9061186760008601610a69565b92612295565b61187a8460028301610bb7565b600360029101610c12565b6118a361189c61189760058590610cbd565b610cd5565b8290610d72565b906118d76118d17f33ab279870fef004a0f7d22a52a4e9606726d6fd587d74ea54c3d2d486e161a093610ac6565b91610984565b916118e0610133565b806118ea81610245565b0390a3600190565b506119146118fe610133565b928392636af1951760e11b8452600484016111ce565b0390fd5b6119299061192461097f565b6116bd565b90565b94939291906002958161194961194460048390610b67565b61164a565b9061195660808301610bd7565b6119686119628b610432565b91610432565b0361197d57505061197a9596506119b2565b90565b906119ae61198f60808b949301610bd7565b92611998610133565b938493633659650b60e11b855260048501611714565b0390fd5b906119c7949392916119c261218c565b611bab565b906119d0612217565b565b90565b6119e16119e691610148565b6119d2565b9052565b905090565b60007f2d00000000000000000000000000000000000000000000000000000000000000910152565b611a23600180926119ea565b611a2c816119ef565b0190565b60601b90565b611a3f90611a30565b90565b611a4b90611a36565b90565b611a5a611a5f916101f6565b611a42565b9052565b611a7f602082611a79611a8694601497966119d5565b01611a17565b8092611a4e565b0190565b60200190565b5190565b90565b611aa090611a94565b9052565b60209181520190565b60005b838110611ac1575050906000910152565b806020918301518185015201611ab0565b611af1611afa602093611aff93611ae881611a90565b93848093611aa4565b95869101611aad565b6105ca565b0190565b93611b39611b549694611b2f611b4695611b2560a08a019660008b0190610368565b60208901906104fe565b6040870190611a97565b8482036060860152611ad2565b916080818403910152611ad2565b90565b90565b611b6e611b69611b7392611b57565b6108eb565b610148565b90565b611b85611b8b91939293610148565b92610148565b91611b97838202610148565b928184041490151715611ba657565b610a76565b939092919350611bc5611bc060048590610b67565b611141565b9184611be4611bde611bd9600187016111c1565b6101f6565b916101f6565b141580611d9c575b611d7457611c3784611c1f8791611c10611c04610133565b93849260208401611a63565b602082018103825203826105ea565b611c31611c2b82611a90565b91611a8a565b20612412565b91611c4f611c47600186016111c1565b848491612465565b611c70611c69611c61600288016111c1565b868591612465565b911561018e565b908115611d63575b50611d3557505050611ce690611c918460038301610bb7565b611c9e6003808301610c12565b7f000000000000000000000000000000000000000000000000000000000000000090611ce0611cd06000879301610a69565b611cda6002611b5a565b90611b76565b9161235e565b90611d1a611d147f95de43ab6b6ff3a41536bffc792e8f029ac26b90bd0efc7f60dc94b8a2e9610d93610ac6565b91610984565b91611d23610133565b80611d2d81610245565b0390a3600190565b8591611d5f91869394919091611d49610133565b9586956317c1016760e21b875260048701611b03565b0390fd5b611d6e91501561018e565b38611c78565b505050611d98611d82610133565b92839263550e01ed60e01b8452600484016111ce565b0390fd5b5084611dbb611db5611db0600287016111c1565b6101f6565b916101f6565b1415611bec565b90611dd6939291611dd161097f565b61192c565b90565b611df0611df591611de861097f565b506002610990565b6109c8565b90565b90611e0a91611e056122e5565b611e0d565b90565b90611e1f91611e1a61218c565b611e2a565b90611e28612217565b565b50611e3f611e3a60048390610b67565b611141565b611e4b60038201611164565b611e5e611e586001610432565b91610432565b14600014611f0957611eb890611e78600460038301610c12565b7f000000000000000000000000000000000000000000000000000000000000000090611eb26000611eab600184016111c1565b9201610a69565b9161235e565b5b611ec161216b565b90611f01611eef7f62eb106a4fbe42c7cbd47bbf87b4fe9d81b93ade91ebf33b4d1e7d35b9268ce792610ac6565b92611ef8610133565b9182918261050b565b0390a2600190565b611f1560038201611164565b611f28611f226002610432565b91610432565b14600014611fc957611fc490611f42600460038301610c12565b611f847f0000000000000000000000000000000000000000000000000000000000000000611f72600184016111c1565b611f7e60008501610a69565b9161235e565b7f000000000000000000000000000000000000000000000000000000000000000090611fbe6000611fb7600284016111c1565b9201610a69565b9161235e565b611eb9565b611fd66003839201611164565b90611ff8611fe2610133565b928392631b9f23ab60e21b84526004840161117e565b0390fd5b61200d9061200861097f565b611df8565b90565b606090565b5490565b60209181520190565b600052602060002090565b6120379054610a55565b90565b60010190565b9061205d61205761205084612015565b8093612019565b92612022565b9060005b81811061206e5750505090565b90919261208e6120886001926120838761202d565b6107de565b9461203a565b9101919091612061565b906120a291612040565b90565b906120c56120be926120b5610133565b93848092612098565b03836105ea565b565b6120d0906120a5565b90565b6120ea6120ef916120e2612010565b506005610cbd565b6120c7565b90565b612103906120fe6122e5565b612105565b565b8061212161211b6121166000610b24565b6101f6565b916101f6565b146121315761212f906123ac565b565b61215c61213e6000610b24565b612146610133565b918291631e4fbdf760e01b83526004830161050b565b0390fd5b612169906120f2565b565b612173611675565b5061217c6124f8565b90565b6121896002611b5a565b90565b6121966000610a69565b6121af6121a96121a461217f565b610148565b91610148565b146121c8576121c66121bf61217f565b6000610ae5565b565b6121d0610133565b633ee5aeb560e01b8152806121e760048201610245565b0390fd5b90565b6122026121fd612207926121eb565b6108eb565b610148565b90565b61221460016121ee565b90565b61222961222261220a565b6000610ae5565b565b63ffffffff1690565b63ffffffff60e01b1690565b60e01b90565b61225a61225561225f9261222b565b612240565b612234565b90565b60409061228c6122939496959396612282606084019860008501906104fe565b60208301906104fe565b0190610368565b565b6004926122cf6122e395936122de93946122b66323b872dd92949192612246565b936122bf610133565b9788956020870190815201612262565b602082018103825203836105ea565b6125b3565b565b6122ed6116a7565b6123066123006122fb61216b565b6101f6565b916101f6565b0361230d57565b61233661231861216b565b612320610133565b91829163118cdaa760e01b83526004830161050b565b0390fd5b91602061235c929493612355604082019660008301906104fe565b0190610368565b565b906123a56123aa936123966004949361237d63a9059cbb919391612246565b92612386610133565b968794602086019081520161233a565b602082018103825203836105ea565b6125b3565b565b6123b660016111c1565b6123c1826001610bb7565b906123f56123ef7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610984565b91610984565b916123fe610133565b8061240881610245565b0390a3565b600090565b61241a61240d565b507f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c60002090565b6004111561245457565b61040d565b906124638261244a565b565b9161246e61097f565b5061247a828290612691565b5061248e6124886000612459565b91612459565b1490816124ba575b509283156124a5575b50505090565b6124b29350919091612815565b38808061249f565b90506124ce6124c8856101f6565b916101f6565b1438612496565b5090565b90565b6124f06124eb6124f5926124d9565b6108eb565b610148565b90565b612500611675565b5061250a33611501565b8061252d575b60001461252257601436033560601c90565b61252a6128e5565b90565b5061253a600036906124d5565b61254d61254760146124dc565b91610148565b1015612510565b61256861256361256d92610b05565b6108eb565b610148565b90565b6125798161018e565b0361258057565b600080fd5b9050519061259282612570565b565b906020828203126125ae576125ab91600001612585565b90565b61013e565b906125c6906125c183610916565b6128f2565b6125cf81611a90565b6125e26125dc6000612554565b91610148565b14159081612621575b506125f35750565b6125ff61261d91610916565b612607610133565b918291635274afe760e01b83526004830161050b565b0390fd5b612646915061264090602061263582611a90565b818301019101612594565b1561018e565b386125eb565b600090565b90565b61266861266361266d92612651565b6108eb565b610148565b90565b61268461267f61268992610148565b610aa9565b611a94565b90565b600090565b91909161269c611675565b506126a561264c565b506126ae61240d565b506126b883611a90565b6126cb6126c56041612654565b91610148565b146000146127145761270d91926126e061240d565b506126e961240d565b506126f261268c565b5060208101516060604083015192015160001a9091926129c6565b9192909190565b5061271f6000610b24565b9061273361272e600294611a90565b612670565b91929190565b9161275d9261275060408201936000830190611a97565b6020818403910152611ad2565b90565b9061277261276d83610628565b610613565b918252565b606090565b3d6000146127995761278d3d612760565b903d6000602084013e5b565b6127a1612777565b90612797565b90565b6127be6127b96127c3926127a7565b6108eb565b610148565b90565b6127cf81611a94565b036127d657565b600080fd5b905051906127e8826127c6565b565b9060208282031261280457612801916000016127db565b90565b61013e565b61281290612234565b90565b9060009261285b849361282661097f565b509261284c612833610133565b938492600460208501630b135d3f60e11b815201612739565b602082018103825203826105ea565b602081019051915afa61286c61277c565b90806128c1575b908161287e575b5090565b6128999150602061288e82611a90565b8183010191016127ea565b6128ba6128b46128af630b135d3f60e11b612809565b611a94565b91611a94565b143861287a565b506128cb81611a90565b6128de6128d860206127aa565b91610148565b1015612873565b6128ed611675565b503390565b90612911916128ff612777565b509061290b6000612554565b91612ad6565b90565b612920612925916109a8565b610ac6565b90565b90565b61293f61293a61294492612928565b6108eb565b610148565b90565b60ff1690565b61295690612947565b9052565b6129906129979461298660609498979561297c608086019a6000870190611a97565b602085019061294d565b6040830190611a97565b0190611a97565b565b6129a1610133565b3d6000823e3d90fd5b6129be6129b96129c392610b05565b610aa9565b611a94565b90565b9392936129d1611675565b506129da61264c565b506129e361240d565b506129ed85612914565b612a1f612a197f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a061292b565b91610148565b11612ab35790612a4360209495600094939293612a3a610133565b9485948561295a565b838052039060015afa15612aae57612a5c600051610aa9565b80612a78612a72612a6d6000610b24565b6101f6565b916101f6565b14612a9057600091612a8a60006129aa565b91929190565b50612a9b6000610b24565b600191612aa860006129aa565b91929190565b612999565b505050612ac06000610b24565b9060039291929190565b612ad39061090a565b90565b9091612ae0612777565b50612aea30612aca565b31612afd612af783610148565b91610148565b10612b2a5760008091612b27948491602082019151925af190612b1e61277c565b90919091612b58565b90565b612b54612b3630612aca565b612b3e610133565b91829163cd78605960e01b83526004830161050b565b0390fd5b90612b6c90612b65612777565b501561018e565b600014612b795750612be6565b612b8282611a90565b612b95612b8f6000612554565b91610148565b1480612bca575b612ba4575090565b612bc690612bb0610133565b918291639996b31560e01b83526004830161050b565b0390fd5b50803b612be0612bda6000612554565b91610148565b14612b9c565b612bef81611a90565b612c02612bfc6000612554565b91610148565b11600014612c1257805190602001fd5b612c1a610133565b630a12f52160e11b815280612c3160048201610245565b0390fdfea2646970667358221220c90cbfe5bd7415f75d367b48f3b7877018249037800513074d030a5c88deaf6864736f6c63430008160033";
        public BlockRacersWageringDeploymentBase() : base(BYTECODE) { }
        public BlockRacersWageringDeploymentBase(string byteCode) : base(byteCode) { }
        [Parameter("address", "trustedForwarder", 1)]
        public virtual string TrustedForwarder { get; set; }
        [Parameter("address", "admin_", 2)]
        public virtual string Admin { get; set; }
        [Parameter("address", "token_", 3)]
        public virtual string Token { get; set; }
    }

    public partial class AcceptWagerFunction : AcceptWagerFunctionBase { }

    [Function("acceptWager", "bool")]
    public class AcceptWagerFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "wagerId", 1)]
        public virtual BigInteger WagerId { get; set; }
    }

    public partial class AddToBlackListFunction : AddToBlackListFunctionBase { }

    [Function("addToBlackList")]
    public class AddToBlackListFunctionBase : FunctionMessage
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
    }

    public partial class AdminCancelWagerFunction : AdminCancelWagerFunctionBase { }

    [Function("adminCancelWager", "bool")]
    public class AdminCancelWagerFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "wagerId", 1)]
        public virtual BigInteger WagerId { get; set; }
    }

    public partial class CancelWagerFunction : CancelWagerFunctionBase { }

    [Function("cancelWager", "bool")]
    public class CancelWagerFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "wagerId", 1)]
        public virtual BigInteger WagerId { get; set; }
    }

    public partial class CompleteWagerFunction : CompleteWagerFunctionBase { }

    [Function("completeWager", "bool")]
    public class CompleteWagerFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "wagerId", 1)]
        public virtual BigInteger WagerId { get; set; }
        [Parameter("address", "winner", 2)]
        public virtual string Winner { get; set; }
        [Parameter("bytes", "creatorProof", 3)]
        public virtual byte[] CreatorProof { get; set; }
        [Parameter("bytes", "opponentProof", 4)]
        public virtual byte[] OpponentProof { get; set; }
    }

    public partial class CreateWagerFunction : CreateWagerFunctionBase { }

    [Function("createWager", "bool")]
    public class CreateWagerFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "prize", 1)]
        public virtual BigInteger Prize { get; set; }
    }

    public partial class GetPlayersWagersFunction : GetPlayersWagersFunctionBase { }

    [Function("getPlayersWagers", "uint256[]")]
    public class GetPlayersWagersFunctionBase : FunctionMessage
    {
        [Parameter("address", "player", 1)]
        public virtual string Player { get; set; }
    }

    public partial class GetWagerFunction : GetWagerFunctionBase { }

    [Function("getWager", typeof(GetWagerOutputDTO))]
    public class GetWagerFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "wagerId", 1)]
        public virtual BigInteger WagerId { get; set; }
    }

    public partial class IsBlackListedFunction : IsBlackListedFunctionBase { }

    [Function("isBlackListed", "bool")]
    public class IsBlackListedFunctionBase : FunctionMessage
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
    }

    public partial class IsTrustedForwarderFunction : IsTrustedForwarderFunctionBase { }

    [Function("isTrustedForwarder", "bool")]
    public class IsTrustedForwarderFunctionBase : FunctionMessage
    {
        [Parameter("address", "forwarder", 1)]
        public virtual string Forwarder { get; set; }
    }

    public partial class LatestWagerIdFunction : LatestWagerIdFunctionBase { }

    [Function("latestWagerId", "uint256")]
    public class LatestWagerIdFunctionBase : FunctionMessage
    {

    }

    public partial class OwnerFunction : OwnerFunctionBase { }

    [Function("owner", "address")]
    public class OwnerFunctionBase : FunctionMessage
    {

    }

    public partial class RemoveFromBlackListFunction : RemoveFromBlackListFunctionBase { }

    [Function("removeFromBlackList")]
    public class RemoveFromBlackListFunctionBase : FunctionMessage
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
    }

    public partial class RenounceOwnershipFunction : RenounceOwnershipFunctionBase { }

    [Function("renounceOwnership")]
    public class RenounceOwnershipFunctionBase : FunctionMessage
    {

    }

    public partial class TokenFunction : TokenFunctionBase { }

    [Function("token", "address")]
    public class TokenFunctionBase : FunctionMessage
    {

    }

    public partial class TransferOwnershipFunction : TransferOwnershipFunctionBase { }

    [Function("transferOwnership")]
    public class TransferOwnershipFunctionBase : FunctionMessage
    {
        [Parameter("address", "newOwner", 1)]
        public virtual string NewOwner { get; set; }
    }

    public partial class TrustedForwarderFunction : TrustedForwarderFunctionBase { }

    [Function("trustedForwarder", "address")]
    public class TrustedForwarderFunctionBase : FunctionMessage
    {

    }

    public partial class AddedToBlacklistEventDTO : AddedToBlacklistEventDTOBase { }

    [Event("AddedToBlacklist")]
    public class AddedToBlacklistEventDTOBase : IEventDTO
    {
        [Parameter("address", "wallet", 1, true )]
        public virtual string Wallet { get; set; }
    }

    public partial class OwnershipTransferredEventDTO : OwnershipTransferredEventDTOBase { }

    [Event("OwnershipTransferred")]
    public class OwnershipTransferredEventDTOBase : IEventDTO
    {
        [Parameter("address", "previousOwner", 1, true )]
        public virtual string PreviousOwner { get; set; }
        [Parameter("address", "newOwner", 2, true )]
        public virtual string NewOwner { get; set; }
    }

    public partial class RemovedFromBlacklistedEventDTO : RemovedFromBlacklistedEventDTOBase { }

    [Event("RemovedFromBlacklisted")]
    public class RemovedFromBlacklistedEventDTOBase : IEventDTO
    {
        [Parameter("address", "wallet", 1, true )]
        public virtual string Wallet { get; set; }
    }

    public partial class WagerAcceptedEventDTO : WagerAcceptedEventDTOBase { }

    [Event("WagerAccepted")]
    public class WagerAcceptedEventDTOBase : IEventDTO
    {
        [Parameter("uint256", "wagerId", 1, true )]
        public virtual BigInteger WagerId { get; set; }
        [Parameter("address", "opponent", 2, true )]
        public virtual string Opponent { get; set; }
    }

    public partial class WagerCancelledEventDTO : WagerCancelledEventDTOBase { }

    [Event("WagerCancelled")]
    public class WagerCancelledEventDTOBase : IEventDTO
    {
        [Parameter("uint256", "wagerId", 1, true )]
        public virtual BigInteger WagerId { get; set; }
        [Parameter("address", "cancelledBy", 2, false )]
        public virtual string CancelledBy { get; set; }
    }

    public partial class WagerCompletedEventDTO : WagerCompletedEventDTOBase { }

    [Event("WagerCompleted")]
    public class WagerCompletedEventDTOBase : IEventDTO
    {
        [Parameter("uint256", "wagerId", 1, true )]
        public virtual BigInteger WagerId { get; set; }
        [Parameter("address", "winner", 2, true )]
        public virtual string Winner { get; set; }
    }

    public partial class WagerCreatedEventDTO : WagerCreatedEventDTOBase { }

    [Event("WagerCreated")]
    public class WagerCreatedEventDTOBase : IEventDTO
    {
        [Parameter("uint256", "wagerId", 1, true )]
        public virtual BigInteger WagerId { get; set; }
        [Parameter("address", "creator", 2, true )]
        public virtual string Creator { get; set; }
        [Parameter("uint256", "prize", 3, false )]
        public virtual BigInteger Prize { get; set; }
    }

    public partial class AccountAlreadyBlacklistedError : AccountAlreadyBlacklistedErrorBase { }

    [Error("AccountAlreadyBlacklisted")]
    public class AccountAlreadyBlacklistedErrorBase : IErrorDTO
    {
        [Parameter("address", "wallet", 1)]
        public virtual string Wallet { get; set; }
    }

    public partial class AccountBlacklistedError : AccountBlacklistedErrorBase { }

    [Error("AccountBlacklisted")]
    public class AccountBlacklistedErrorBase : IErrorDTO
    {
        [Parameter("address", "wallet", 1)]
        public virtual string Wallet { get; set; }
    }

    public partial class AccountNotBlacklistedError : AccountNotBlacklistedErrorBase { }

    [Error("AccountNotBlacklisted")]
    public class AccountNotBlacklistedErrorBase : IErrorDTO
    {
        [Parameter("address", "wallet", 1)]
        public virtual string Wallet { get; set; }
    }

    public partial class AddressEmptyCodeError : AddressEmptyCodeErrorBase { }

    [Error("AddressEmptyCode")]
    public class AddressEmptyCodeErrorBase : IErrorDTO
    {
        [Parameter("address", "target", 1)]
        public virtual string Target { get; set; }
    }

    public partial class AddressInsufficientBalanceError : AddressInsufficientBalanceErrorBase { }

    [Error("AddressInsufficientBalance")]
    public class AddressInsufficientBalanceErrorBase : IErrorDTO
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
    }

    public partial class FailedInnerCallError : FailedInnerCallErrorBase { }
    [Error("FailedInnerCall")]
    public class FailedInnerCallErrorBase : IErrorDTO
    {
    }

    public partial class OnlyParticipantsCanCancelError : OnlyParticipantsCanCancelErrorBase { }

    [Error("OnlyParticipantsCanCancel")]
    public class OnlyParticipantsCanCancelErrorBase : IErrorDTO
    {
        [Parameter("uint256", "wagerId", 1)]
        public virtual BigInteger WagerId { get; set; }
        [Parameter("address", "requestor", 2)]
        public virtual string Requestor { get; set; }
    }

    public partial class OpponentCantBeChallengerError : OpponentCantBeChallengerErrorBase { }

    [Error("OpponentCantBeChallenger")]
    public class OpponentCantBeChallengerErrorBase : IErrorDTO
    {
        [Parameter("uint256", "wagerId", 1)]
        public virtual BigInteger WagerId { get; set; }
        [Parameter("address", "opponent", 2)]
        public virtual string Opponent { get; set; }
    }

    public partial class OwnableInvalidOwnerError : OwnableInvalidOwnerErrorBase { }

    [Error("OwnableInvalidOwner")]
    public class OwnableInvalidOwnerErrorBase : IErrorDTO
    {
        [Parameter("address", "owner", 1)]
        public virtual string Owner { get; set; }
    }

    public partial class OwnableUnauthorizedAccountError : OwnableUnauthorizedAccountErrorBase { }

    [Error("OwnableUnauthorizedAccount")]
    public class OwnableUnauthorizedAccountErrorBase : IErrorDTO
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
    }

    public partial class PlayerSignatureInvalidError : PlayerSignatureInvalidErrorBase { }

    [Error("PlayerSignatureInvalid")]
    public class PlayerSignatureInvalidErrorBase : IErrorDTO
    {
        [Parameter("uint256", "wagerId", 1)]
        public virtual BigInteger WagerId { get; set; }
        [Parameter("address", "winner", 2)]
        public virtual string Winner { get; set; }
        [Parameter("bytes32", "message", 3)]
        public virtual byte[] Message { get; set; }
        [Parameter("bytes", "creatorProof", 4)]
        public virtual byte[] CreatorProof { get; set; }
        [Parameter("bytes", "opponentProof", 5)]
        public virtual byte[] OpponentProof { get; set; }
    }

    public partial class ReentrancyGuardReentrantCallError : ReentrancyGuardReentrantCallErrorBase { }
    [Error("ReentrancyGuardReentrantCall")]
    public class ReentrancyGuardReentrantCallErrorBase : IErrorDTO
    {
    }

    public partial class SafeERC20FailedOperationError : SafeERC20FailedOperationErrorBase { }

    [Error("SafeERC20FailedOperation")]
    public class SafeERC20FailedOperationErrorBase : IErrorDTO
    {
        [Parameter("address", "token", 1)]
        public virtual string Token { get; set; }
    }

    public partial class WagerCantBeCancelledError : WagerCantBeCancelledErrorBase { }

    [Error("WagerCantBeCancelled")]
    public class WagerCantBeCancelledErrorBase : IErrorDTO
    {
        [Parameter("uint256", "wagerId", 1)]
        public virtual BigInteger WagerId { get; set; }
        [Parameter("uint8", "currentState", 2)]
        public virtual byte CurrentState { get; set; }
    }

    public partial class WagerStateIncorrectError : WagerStateIncorrectErrorBase { }

    [Error("WagerStateIncorrect")]
    public class WagerStateIncorrectErrorBase : IErrorDTO
    {
        [Parameter("uint256", "wagerId", 1)]
        public virtual BigInteger WagerId { get; set; }
        [Parameter("uint8", "currentState", 2)]
        public virtual byte CurrentState { get; set; }
        [Parameter("uint8", "expected", 3)]
        public virtual byte Expected { get; set; }
    }

    public partial class WinnerMustBeParticipantError : WinnerMustBeParticipantErrorBase { }

    [Error("WinnerMustBeParticipant")]
    public class WinnerMustBeParticipantErrorBase : IErrorDTO
    {
        [Parameter("uint256", "wagerId", 1)]
        public virtual BigInteger WagerId { get; set; }
        [Parameter("address", "winner", 2)]
        public virtual string Winner { get; set; }
    }













    public partial class GetPlayersWagersOutputDTO : GetPlayersWagersOutputDTOBase { }

    [FunctionOutput]
    public class GetPlayersWagersOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256[]", "", 1)]
        public virtual List<BigInteger> ReturnValue1 { get; set; }
    }

    public partial class GetWagerOutputDTO : GetWagerOutputDTOBase { }

    [FunctionOutput]
    public class GetWagerOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple", "", 1)]
        public virtual Wager ReturnValue1 { get; set; }
    }

    public partial class IsBlackListedOutputDTO : IsBlackListedOutputDTOBase { }

    [FunctionOutput]
    public class IsBlackListedOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class IsTrustedForwarderOutputDTO : IsTrustedForwarderOutputDTOBase { }

    [FunctionOutput]
    public class IsTrustedForwarderOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class LatestWagerIdOutputDTO : LatestWagerIdOutputDTOBase { }

    [FunctionOutput]
    public class LatestWagerIdOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class OwnerOutputDTO : OwnerOutputDTOBase { }

    [FunctionOutput]
    public class OwnerOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }





    public partial class TokenOutputDTO : TokenOutputDTOBase { }

    [FunctionOutput]
    public class TokenOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }



    public partial class TrustedForwarderOutputDTO : TrustedForwarderOutputDTOBase { }

    [FunctionOutput]
    public class TrustedForwarderOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }
}
