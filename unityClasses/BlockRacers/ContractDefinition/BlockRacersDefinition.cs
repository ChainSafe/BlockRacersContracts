using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace BlockRacers.BlockRacers.ContractDefinition
{


    public partial class BlockRacersDeployment : BlockRacersDeploymentBase
    {
        public BlockRacersDeployment() : base(BYTECODE) { }
        public BlockRacersDeployment(string byteCode) : base(byteCode) { }
    }

    public class BlockRacersDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "";
        public BlockRacersDeploymentBase() : base(BYTECODE) { }
        public BlockRacersDeploymentBase(string byteCode) : base(byteCode) { }
        [Parameter("address", "trustedForwarder", 1)]
        public virtual string TrustedForwarder { get; set; }
        [Parameter("address", "admin_", 2)]
        public virtual string Admin { get; set; }
        [Parameter("address", "token_", 3)]
        public virtual string Token { get; set; }
        [Parameter("address", "assets_", 4)]
        public virtual string Assets { get; set; }
        [Parameter("address", "blockRacersFeeAccount_", 5)]
        public virtual string Blockracersfeeaccount { get; set; }
        [Parameter("tuple", "gameSettingsData_", 6)]
        public virtual GameSettingsData Gamesettingsdata { get; set; }
    }

    public partial class AssetsFunction : AssetsFunctionBase { }

    [Function("assets", "address")]
    public class AssetsFunctionBase : FunctionMessage
    {

    }

    public partial class BlockRacersFeeAccountFunction : BlockRacersFeeAccountFunctionBase { }

    [Function("blockRacersFeeAccount", "address")]
    public class BlockRacersFeeAccountFunctionBase : FunctionMessage
    {

    }

    public partial class GetCarOptionFunction : GetCarOptionFunctionBase { }

    [Function("getCarOption", typeof(GetCarOptionOutputDTO))]
    public class GetCarOptionFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "carTypeId", 1)]
        public virtual BigInteger CarTypeId { get; set; }
    }

    public partial class GetCarOwnerFunction : GetCarOwnerFunctionBase { }

    [Function("getCarOwner", "bool")]
    public class GetCarOwnerFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "carId", 1)]
        public virtual BigInteger CarId { get; set; }
        [Parameter("address", "account", 2)]
        public virtual string Account { get; set; }
    }

    public partial class GetCarStatsFunction : GetCarStatsFunctionBase { }

    [Function("getCarStats", typeof(GetCarStatsOutputDTO))]
    public class GetCarStatsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "carId", 1)]
        public virtual BigInteger CarId { get; set; }
    }

    public partial class GetItemDataFunction : GetItemDataFunctionBase { }

    [Function("getItemData", typeof(GetItemDataOutputDTO))]
    public class GetItemDataFunctionBase : FunctionMessage
    {
        [Parameter("uint8", "itemType", 1)]
        public virtual byte ItemType { get; set; }
    }

    public partial class GetNumberOfCarsMintedFunction : GetNumberOfCarsMintedFunctionBase { }

    [Function("getNumberOfCarsMinted", "uint256")]
    public class GetNumberOfCarsMintedFunctionBase : FunctionMessage
    {

    }

    public partial class GetUpgradeDataFunction : GetUpgradeDataFunctionBase { }

    [Function("getUpgradeData", typeof(GetUpgradeDataOutputDTO))]
    public class GetUpgradeDataFunctionBase : FunctionMessage
    {

    }

    public partial class IsTrustedForwarderFunction : IsTrustedForwarderFunctionBase { }

    [Function("isTrustedForwarder", "bool")]
    public class IsTrustedForwarderFunctionBase : FunctionMessage
    {
        [Parameter("address", "forwarder", 1)]
        public virtual string Forwarder { get; set; }
    }

    public partial class MintCarFunction : MintCarFunctionBase { }

    [Function("mintCar", "bool")]
    public class MintCarFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "carTypeId", 1)]
        public virtual BigInteger CarTypeId { get; set; }
    }

    public partial class OwnerFunction : OwnerFunctionBase { }

    [Function("owner", "address")]
    public class OwnerFunctionBase : FunctionMessage
    {

    }

    public partial class RenounceOwnershipFunction : RenounceOwnershipFunctionBase { }

    [Function("renounceOwnership")]
    public class RenounceOwnershipFunctionBase : FunctionMessage
    {

    }

    public partial class SetBlockRacersFeeAccountFunction : SetBlockRacersFeeAccountFunctionBase { }

    [Function("setBlockRacersFeeAccount")]
    public class SetBlockRacersFeeAccountFunctionBase : FunctionMessage
    {
        [Parameter("address", "newBlockRacersFeeAccount", 1)]
        public virtual string NewBlockRacersFeeAccount { get; set; }
    }

    public partial class SetNewGameSettingsFunction : SetNewGameSettingsFunctionBase { }

    [Function("setNewGameSettings")]
    public class SetNewGameSettingsFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "newSettings", 1)]
        public virtual GameSettingsData NewSettings { get; set; }
    }

    public partial class TokenFunction : TokenFunctionBase { }

    [Function("token", "address")]
    public class TokenFunctionBase : FunctionMessage
    {

    }

    public partial class TransferOwnershipFunction : TransferOwnershipFunctionBase { }

    [Function("transferOwnership")]
    public class TransferOwnershipFunctionBase : FunctionMessage
    {
        [Parameter("address", "newOwner", 1)]
        public virtual string NewOwner { get; set; }
    }

    public partial class TrustedForwarderFunction : TrustedForwarderFunctionBase { }

    [Function("trustedForwarder", "address")]
    public class TrustedForwarderFunctionBase : FunctionMessage
    {

    }

    public partial class UpgradeEngineFunction : UpgradeEngineFunctionBase { }

    [Function("upgradeEngine", "bool")]
    public class UpgradeEngineFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "carId", 1)]
        public virtual BigInteger CarId { get; set; }
    }

    public partial class UpgradeHandlingFunction : UpgradeHandlingFunctionBase { }

    [Function("upgradeHandling", "bool")]
    public class UpgradeHandlingFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "carId", 1)]
        public virtual BigInteger CarId { get; set; }
    }

    public partial class UpgradeNosFunction : UpgradeNosFunctionBase { }

    [Function("upgradeNos", "bool")]
    public class UpgradeNosFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "carId", 1)]
        public virtual BigInteger CarId { get; set; }
    }

    public partial class MintCarEventDTO : MintCarEventDTOBase { }

    [Event("MintCar")]
    public class MintCarEventDTOBase : IEventDTO
    {
        [Parameter("address", "wallet", 1, true )]
        public virtual string Wallet { get; set; }
        [Parameter("uint256", "carId", 2, false )]
        public virtual BigInteger CarId { get; set; }
    }

    public partial class OwnershipTransferredEventDTO : OwnershipTransferredEventDTOBase { }

    [Event("OwnershipTransferred")]
    public class OwnershipTransferredEventDTOBase : IEventDTO
    {
        [Parameter("address", "previousOwner", 1, true )]
        public virtual string PreviousOwner { get; set; }
        [Parameter("address", "newOwner", 2, true )]
        public virtual string NewOwner { get; set; }
    }

    public partial class UpgradeEngineEventDTO : UpgradeEngineEventDTOBase { }

    [Event("UpgradeEngine")]
    public class UpgradeEngineEventDTOBase : IEventDTO
    {
        [Parameter("address", "wallet", 1, true )]
        public virtual string Wallet { get; set; }
        [Parameter("uint256", "_amount", 2, false )]
        public virtual BigInteger Amount { get; set; }
        [Parameter("uint16", "level", 3, false )]
        public virtual ushort Level { get; set; }
    }

    public partial class UpgradeHandlingEventDTO : UpgradeHandlingEventDTOBase { }

    [Event("UpgradeHandling")]
    public class UpgradeHandlingEventDTOBase : IEventDTO
    {
        [Parameter("address", "wallet", 1, true )]
        public virtual string Wallet { get; set; }
        [Parameter("uint256", "_amount", 2, false )]
        public virtual BigInteger Amount { get; set; }
        [Parameter("uint16", "level", 3, false )]
        public virtual ushort Level { get; set; }
    }

    public partial class UpgradeNosEventDTO : UpgradeNosEventDTOBase { }

    [Event("UpgradeNos")]
    public class UpgradeNosEventDTOBase : IEventDTO
    {
        [Parameter("address", "wallet", 1, true )]
        public virtual string Wallet { get; set; }
        [Parameter("uint256", "_amount", 2, false )]
        public virtual BigInteger Amount { get; set; }
        [Parameter("uint16", "level", 3, false )]
        public virtual ushort Level { get; set; }
    }

    public partial class AddressEmptyCodeError : AddressEmptyCodeErrorBase { }

    [Error("AddressEmptyCode")]
    public class AddressEmptyCodeErrorBase : IErrorDTO
    {
        [Parameter("address", "target", 1)]
        public virtual string Target { get; set; }
    }

    public partial class AddressInsufficientBalanceError : AddressInsufficientBalanceErrorBase { }

    [Error("AddressInsufficientBalance")]
    public class AddressInsufficientBalanceErrorBase : IErrorDTO
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
    }

    public partial class CarTypeDoesNotExistError : CarTypeDoesNotExistErrorBase { }

    [Error("CarTypeDoesNotExist")]
    public class CarTypeDoesNotExistErrorBase : IErrorDTO
    {
        [Parameter("uint256", "carTypeId", 1)]
        public virtual BigInteger CarTypeId { get; set; }
    }

    public partial class FailedInnerCallError : FailedInnerCallErrorBase { }
    [Error("FailedInnerCall")]
    public class FailedInnerCallErrorBase : IErrorDTO
    {
    }

    public partial class InvalidItemTypeError : InvalidItemTypeErrorBase { }
    [Error("InvalidItemType")]
    public class InvalidItemTypeErrorBase : IErrorDTO
    {
    }

    public partial class NotCarOwnerError : NotCarOwnerErrorBase { }

    [Error("NotCarOwner")]
    public class NotCarOwnerErrorBase : IErrorDTO
    {
        [Parameter("uint256", "carId", 1)]
        public virtual BigInteger CarId { get; set; }
    }

    public partial class OwnableInvalidOwnerError : OwnableInvalidOwnerErrorBase { }

    [Error("OwnableInvalidOwner")]
    public class OwnableInvalidOwnerErrorBase : IErrorDTO
    {
        [Parameter("address", "owner", 1)]
        public virtual string Owner { get; set; }
    }

    public partial class OwnableUnauthorizedAccountError : OwnableUnauthorizedAccountErrorBase { }

    [Error("OwnableUnauthorizedAccount")]
    public class OwnableUnauthorizedAccountErrorBase : IErrorDTO
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
    }

    public partial class ReentrancyGuardReentrantCallError : ReentrancyGuardReentrantCallErrorBase { }
    [Error("ReentrancyGuardReentrantCall")]
    public class ReentrancyGuardReentrantCallErrorBase : IErrorDTO
    {
    }

    public partial class SafeERC20FailedOperationError : SafeERC20FailedOperationErrorBase { }

    [Error("SafeERC20FailedOperation")]
    public class SafeERC20FailedOperationErrorBase : IErrorDTO
    {
        [Parameter("address", "token", 1)]
        public virtual string Token { get; set; }
    }

    public partial class UpgradeNotPossibleError : UpgradeNotPossibleErrorBase { }

    [Error("UpgradeNotPossible")]
    public class UpgradeNotPossibleErrorBase : IErrorDTO
    {
        [Parameter("uint256", "carId", 1)]
        public virtual BigInteger CarId { get; set; }
        [Parameter("uint8", "gameItem", 2)]
        public virtual byte GameItem { get; set; }
        [Parameter("uint16", "currentLevel", 3)]
        public virtual ushort CurrentLevel { get; set; }
        [Parameter("uint16", "maxLevel", 4)]
        public virtual ushort MaxLevel { get; set; }
    }

    public partial class AssetsOutputDTO : AssetsOutputDTOBase { }

    [FunctionOutput]
    public class AssetsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class BlockRacersFeeAccountOutputDTO : BlockRacersFeeAccountOutputDTOBase { }

    [FunctionOutput]
    public class BlockRacersFeeAccountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetCarOptionOutputDTO : GetCarOptionOutputDTOBase { }

    [FunctionOutput]
    public class GetCarOptionOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
        [Parameter("string", "", 2)]
        public virtual string ReturnValue2 { get; set; }
    }

    public partial class GetCarOwnerOutputDTO : GetCarOwnerOutputDTOBase { }

    [FunctionOutput]
    public class GetCarOwnerOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class GetCarStatsOutputDTO : GetCarStatsOutputDTOBase { }

    [FunctionOutput]
    public class GetCarStatsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple", "", 1)]
        public virtual CarStats ReturnValue1 { get; set; }
    }

    public partial class GetItemDataOutputDTO : GetItemDataOutputDTOBase { }

    [FunctionOutput]
    public class GetItemDataOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "price", 1)]
        public virtual BigInteger Price { get; set; }
        [Parameter("uint16", "maxLevel", 2)]
        public virtual ushort MaxLevel { get; set; }
    }

    public partial class GetNumberOfCarsMintedOutputDTO : GetNumberOfCarsMintedOutputDTOBase { }

    [FunctionOutput]
    public class GetNumberOfCarsMintedOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetUpgradeDataOutputDTO : GetUpgradeDataOutputDTOBase { }

    [FunctionOutput]
    public class GetUpgradeDataOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple", "", 1)]
        public virtual GameSettingsData ReturnValue1 { get; set; }
    }

    public partial class IsTrustedForwarderOutputDTO : IsTrustedForwarderOutputDTOBase { }

    [FunctionOutput]
    public class IsTrustedForwarderOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }



    public partial class OwnerOutputDTO : OwnerOutputDTOBase { }

    [FunctionOutput]
    public class OwnerOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }







    public partial class TokenOutputDTO : TokenOutputDTOBase { }

    [FunctionOutput]
    public class TokenOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }



    public partial class TrustedForwarderOutputDTO : TrustedForwarderOutputDTOBase { }

    [FunctionOutput]
    public class TrustedForwarderOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }






}
