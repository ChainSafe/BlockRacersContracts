using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace BlockRacersAssets.BlockRacersAssets.ContractDefinition
{


    public partial class BlockRacersAssetsDeployment : BlockRacersAssetsDeploymentBase
    {
        public BlockRacersAssetsDeployment() : base(BYTECODE) { }
        public BlockRacersAssetsDeployment(string byteCode) : base(byteCode) { }
    }

    public class BlockRacersAssetsDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "0x60a06040523462000041576200001f6200001862000219565b91620002a2565b6200002962000047565b612faa62000b988239608051816116070152612faa90f35b6200004d565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906200007e9062000052565b810190811060018060401b038211176200009757604052565b6200005c565b90620000b4620000ac62000047565b928362000072565b565b600080fd5b600080fd5b60018060a01b031690565b620000d690620000c0565b90565b620000e481620000cb565b03620000ec57565b600080fd5b905051906200010082620000d9565b565b600080fd5b600080fd5b60018060401b0381116200012b576200012760209162000052565b0190565b6200005c565b60005b83811062000146575050906000910152565b80602091830151818501520162000134565b90929192620001716200016b826200010c565b6200009d565b9381855260208501908284011162000190576200018e9262000131565b565b62000107565b9080601f83011215620001b757816020620001b49351910162000158565b90565b62000102565b90916060828403126200021357620001d98360008401620000f1565b9260208301519060018060401b0382116200020d5762000200816200020a93860162000196565b93604001620000f1565b90565b620000bb565b620000b6565b6200023c62003b428038038062000230816200009d565b928339810190620001bd565b909192565b90565b90565b60001b90565b62000266620002606200026c9262000241565b62000247565b62000244565b90565b6200027b60006200024d565b90565b7f857e9fc2ee598869c8299d2471fb88ab20fcc352ca6210b82625155e2220c8af90565b620002b390620002c3939262000383565b620002bd6200026f565b6200069a565b50620002e3620002d26200027e565b620002dc6200026f565b906200079c565b565b90565b90565b90565b62000307620003016200030d92620002e5565b620002eb565b620002e8565b90565b6200031c6001620002ee565b90565b906200032e6000199162000247565b9181191691161790565b620003516200034b6200035792620002e8565b620002eb565b620002e8565b90565b90565b9062000377620003716200037f9262000338565b6200035a565b82546200031f565b9055565b906200038f91620003a7565b620003a56200039d62000310565b60066200035d565b565b90620003b39162000537565b565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015620003ee575b6020831014620003e857565b620003b5565b91607f1691620003dc565b600052602060002090565b601f602091010490565b1b90565b91906008620004329102916200042b600019846200040e565b926200040e565b9181191691161790565b91906200045762000451620004609362000338565b6200035a565b90835462000412565b9055565b600090565b6200047f916200047862000464565b916200043c565b565b5b8181106200048e575050565b806200049e600060019362000469565b0162000482565b9190601f8111620004b6575b505050565b620004c5620004f093620003f9565b906020620004d38462000404565b83019310620004f9575b620004e89062000404565b019062000481565b388080620004b1565b9150620004e881929050620004dd565b6200052260006200051b8354620003cb565b83620004a5565b600080019055565b620005359062000509565b565b90620005439162000551565b6200054f60036200052a565b565b62000560620005669262000568565b620009ba565b565b620005739062000575565b565b620005809062000582565b565b6200058d906200058f565b565b6200059a906200059c565b565b620005a790620005a9565b565b620005b490620005b6565b565b608052565b600090565b151590565b620005d09062000244565b90565b90620005df90620005c5565b600052602052604060002090565b62000606620006006200060c92620000c0565b620002eb565b620000c0565b90565b6200061a90620005ed565b90565b62000628906200060f565b90565b9062000637906200061d565b600052602052604060002090565b906200065360ff9162000247565b9181191691161790565b6200066890620005c0565b90565b90565b90620006886200068262000690926200065d565b6200066b565b825462000645565b9055565b60000190565b620006a4620005bb565b50620006bd620006b6828490620009f6565b15620005c0565b6000146200075b57620006ee6001620006e86000620006df60058690620005d3565b0185906200062b565b6200066e565b90620006f962000a2e565b906200073c620007356200072e7f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d95620005c5565b926200061d565b926200061d565b926200074762000047565b80620007538162000694565b0390a4600190565b5050600090565b60001c90565b620007739062000762565b90565b90620007906200078a6200079892620005c5565b62000768565b82546200031f565b9055565b90620007a88262000a75565b91620007c5826001620007be60058590620005d3565b0162000776565b916200080862000801620007fa7fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff95620005c5565b92620005c5565b92620005c5565b926200081362000047565b806200081f8162000694565b0390a4565b5190565b600052602060002090565b9190601f811162000844575b505050565b620008536200087e9362000828565b906020620008618462000404565b8301931062000887575b620008769062000404565b019062000481565b3880806200083f565b915062000876819290506200086b565b1c90565b90620008ae906000199060080262000897565b191690565b81620008bf916200089b565b906002021790565b90620008d38162000824565b9060018060401b038211620009a657620008fa82620008f38554620003cb565b8562000833565b602090601f83116001146200093457918091620009229360009262000927575b5050620008b3565b90555b565b909150015138806200091a565b601f19831691620009458562000828565b9260005b8181106200098d5750916002939185600196941062000970575b5050500201905562000925565b62000982910151601f8416906200089b565b905538808062000963565b9193602060018192878701518155019501920162000949565b6200005c565b90620009b891620008c7565b565b620009c7906002620009ac565b565b60ff1690565b620009de620009e49162000762565b620009c9565b90565b620009f39054620009cf565b90565b62000a2691600062000a1962000a209362000a10620005bb565b506005620005d3565b016200062b565b620009e7565b90565b600090565b62000a3862000a29565b5062000a4362000ac6565b90565b600090565b90565b62000a5d62000a639162000762565b62000a4b565b90565b62000a72905462000a4e565b90565b600162000a9362000a9a9262000a8a62000a46565b506005620005d3565b0162000a66565b90565b5090565b90565b62000abd62000ab762000ac39262000aa1565b620002eb565b620002e8565b90565b62000ad062000a29565b5062000adc3362000b31565b8062000b03575b60001462000af657601436033560601c90565b62000b0062000b5f565b90565b5062000b126000369062000a9d565b62000b2962000b22601462000aa4565b91620002e8565b101562000ae3565b62000b3b620005bb565b5062000b5b62000b5462000b4e62000b7d565b620000cb565b91620000cb565b1490565b62000b6962000a29565b503390565b62000b7a9051620000cb565b90565b62000b8762000a29565b5062000b94608062000b6e565b9056fe60806040526004361015610013575b611081565b61001e60003561016c565b8062fdd58e1461016757806301ffc9a7146101625780630e89341c1461015d578063156e29f614610158578063248a9ca3146101535780632eb2c2d61461014e5780632f2ff15d1461014957806336568abe146101445780634e1273f41461013f578063572b6c051461013a5780637da0a8771461013557806391d1485414610130578063a217fddf1461012b578063a22cb46514610126578063a55784ef14610121578063bb7fde711461011c578063d547741f14610117578063d81d0a1514610112578063e985e9c51461010d578063ec49c9a3146101085763f242432a0361000e5761104a565b610fa5565b610f40565b610edc565b610e3e565b610e05565b610d6c565b610b7c565b610af5565b610a82565b610a4d565b6109e5565b610990565b6107c6565b610792565b61072d565b6104d0565b610431565b6103c1565b6102e7565b61023a565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b60018060a01b031690565b61019b90610187565b90565b6101a781610192565b036101ae57565b600080fd5b905035906101c08261019e565b565b90565b6101ce816101c2565b036101d557565b600080fd5b905035906101e7826101c5565b565b9190604083820312610212578061020661020f92600086016101b3565b936020016101da565b90565b61017d565b610220906101c2565b9052565b919061023890600060208501940190610217565b565b3461026b576102676102566102503660046101e9565b90611138565b61025e610172565b91829182610224565b0390f35b610178565b63ffffffff60e01b1690565b61028581610270565b0361028c57565b600080fd5b9050359061029e8261027c565b565b906020828203126102ba576102b791600001610291565b90565b61017d565b151590565b6102cd906102bf565b9052565b91906102e5906000602085019401906102c4565b565b34610317576103136103026102fd3660046102a0565b611165565b61030a610172565b918291826102d1565b0390f35b610178565b9060208282031261033657610333916000016101da565b90565b61017d565b5190565b60209181520190565b60005b83811061035c575050906000910152565b80602091830151818501520161034b565b601f801991011690565b61039661039f6020936103a49361038d8161033b565b9384809361033f565b95869101610348565b61036d565b0190565b6103be9160208201916000818403910152610377565b90565b346103f1576103ed6103dc6103d736600461031c565b61117f565b6103e4610172565b918291826103a8565b0390f35b610178565b909160608284031261042c5761042961041284600085016101b3565b9361042081602086016101da565b936040016101da565b90565b61017d565b346104625761045e61044d6104473660046103f6565b91611270565b610455610172565b918291826102d1565b0390f35b610178565b90565b61047381610467565b0361047a57565b600080fd5b9050359061048c8261046a565b565b906020828203126104a8576104a59160000161047f565b90565b61017d565b6104b690610467565b9052565b91906104ce906000602085019401906104ad565b565b34610500576104fc6104eb6104e636600461048e565b6112d3565b6104f3610172565b918291826104ba565b0390f35b610178565b600080fd5b634e487b7160e01b600052604160045260246000fd5b9061052a9061036d565b810190811067ffffffffffffffff82111761054457604052565b61050a565b9061055c610555610172565b9283610520565b565b67ffffffffffffffff81116105765760208091020190565b61050a565b600080fd5b909291926105956105908261055e565b610549565b93818552602080860192028301928184116105d257915b8383106105b95750505050565b602080916105c784866101da565b8152019201916105ac565b61057b565b9080601f830112156105f5578160206105f293359101610580565b90565b610505565b600080fd5b67ffffffffffffffff811161061d5761061960209161036d565b0190565b61050a565b90826000939282370152565b9092919261064361063e826105ff565b610549565b9381855260208501908284011161065f5761065d92610622565b565b6105fa565b9080601f830112156106825781602061067f9335910161062e565b90565b610505565b91909160a081840312610722576106a183600083016101b3565b926106af81602084016101b3565b92604083013567ffffffffffffffff811161071d57826106d09185016105d7565b92606081013567ffffffffffffffff811161071857836106f19183016105d7565b92608082013567ffffffffffffffff8111610713576107109201610664565b90565b610182565b610182565b610182565b61017d565b60000190565b3461075f57610749610740366004610687565b93929092611319565b610751610172565b8061075b81610727565b0390f35b610178565b919060408382031261078d578061078161078a926000860161047f565b936020016101b3565b90565b61017d565b346107c1576107ab6107a5366004610764565b906113c3565b6107b3610172565b806107bd81610727565b0390f35b610178565b346107f5576107df6107d9366004610764565b906113cf565b6107e7610172565b806107f181610727565b0390f35b610178565b67ffffffffffffffff81116108125760208091020190565b61050a565b9092919261082c610827826107fa565b610549565b938185526020808601920283019281841161086957915b8383106108505750505050565b6020809161085e84866101b3565b815201920191610843565b61057b565b9080601f8301121561088c5781602061088993359101610817565b90565b610505565b9190916040818403126108ea57600081013567ffffffffffffffff81116108e557836108be91830161086e565b92602082013567ffffffffffffffff81116108e0576108dd92016105d7565b90565b610182565b610182565b61017d565b5190565b60209181520190565b60200190565b61090b906101c2565b9052565b9061091c81602093610902565b0190565b60200190565b9061094361093d610936846108ef565b80936108f3565b926108fc565b9060005b8181106109545750505090565b90919261096d610967600192865161090f565b94610920565b9101919091610947565b61098d9160208201916000818403910152610926565b90565b346109c1576109bd6109ac6109a6366004610891565b906114e1565b6109b4610172565b91829182610977565b0390f35b610178565b906020828203126109e0576109dd916000016101b3565b90565b61017d565b34610a1557610a11610a006109fb3660046109c6565b6115d1565b610a08610172565b918291826102d1565b0390f35b610178565b6000910312610a2557565b61017d565b610a3390610192565b9052565b9190610a4b90600060208501940190610a2a565b565b34610a7d57610a5d366004610a1a565b610a79610a686115fc565b610a70610172565b91829182610a37565b0390f35b610178565b34610ab357610aaf610a9e610a98366004610764565b90611668565b610aa6610172565b918291826102d1565b0390f35b610178565b90565b60001b90565b610ad5610ad0610ada92610ab8565b610abb565b610467565b90565b610ae76000610ac1565b90565b610af2610add565b90565b34610b2557610b05366004610a1a565b610b21610b10610aea565b610b18610172565b918291826104ba565b0390f35b610178565b610b33816102bf565b03610b3a57565b600080fd5b90503590610b4c82610b2a565b565b9190604083820312610b775780610b6b610b7492600086016101b3565b93602001610b3f565b90565b61017d565b34610bab57610b95610b8f366004610b4e565b90611693565b610b9d610172565b80610ba781610727565b0390f35b610178565b67ffffffffffffffff8111610bc85760208091020190565b61050a565b67ffffffffffffffff8111610beb57610be760209161036d565b0190565b61050a565b90929192610c05610c0082610bcd565b610549565b93818552602085019082840111610c2157610c1f92610622565b565b6105fa565b9080601f83011215610c4457816020610c4193359101610bf0565b90565b610505565b929190610c5d610c5882610bb0565b610549565b9381855260208086019202810191838311610cb45781905b838210610c83575050505050565b813567ffffffffffffffff8111610caf57602091610ca48784938701610c26565b815201910190610c75565b610505565b61057b565b9080601f83011215610cd757816020610cd493359101610c49565b90565b610505565b90608082820312610d6757610cf481600084016101b3565b92602083013567ffffffffffffffff8111610d625782610d159185016105d7565b92604081013567ffffffffffffffff8111610d5d5783610d369183016105d7565b92606082013567ffffffffffffffff8111610d5857610d559201610cb9565b90565b610182565b610182565b610182565b61017d565b34610da057610d9c610d8b610d82366004610cdc565b92919091611807565b610d93610172565b918291826102d1565b0390f35b610178565b90608082820312610e0057610dbd81600084016101b3565b92610dcb82602085016101da565b92610dd983604083016101da565b92606082013567ffffffffffffffff8111610dfb57610df89201610c26565b90565b610182565b61017d565b34610e3957610e35610e24610e1b366004610da5565b929190916118a6565b610e2c610172565b918291826102d1565b0390f35b610178565b34610e6d57610e57610e51366004610764565b906118e7565b610e5f610172565b80610e6981610727565b0390f35b610178565b91606083830312610ed757610e8a82600085016101b3565b92602081013567ffffffffffffffff8111610ed25783610eab9183016105d7565b92604082013567ffffffffffffffff8111610ecd57610eca92016105d7565b90565b610182565b610182565b61017d565b34610f0d57610f09610ef8610ef2366004610e72565b91611970565b610f00610172565b918291826102d1565b0390f35b610178565b9190604083820312610f3b5780610f2f610f3892600086016101b3565b936020016101b3565b90565b61017d565b34610f7157610f6d610f5c610f56366004610f12565b9061199e565b610f64610172565b918291826102d1565b0390f35b610178565b7f857e9fc2ee598869c8299d2471fb88ab20fcc352ca6210b82625155e2220c8af90565b610fa2610f76565b90565b34610fd557610fb5366004610a1a565b610fd1610fc0610f9a565b610fc8610172565b918291826104ba565b0390f35b610178565b91909160a08184031261104557610ff483600083016101b3565b9261100281602084016101b3565b9261101082604085016101da565b9261101e83606083016101da565b92608082013567ffffffffffffffff81116110405761103d9201610664565b90565b610182565b61017d565b3461107c5761106661105d366004610fda565b939290926119c6565b61106e610172565b8061107881610727565b0390f35b610178565b600080fd5b600090565b90565b6110a261109d6110a7926101c2565b61108b565b6101c2565b90565b906110b49061108e565b600052602052604060002090565b6110d66110d16110db92610187565b61108b565b610187565b90565b6110e7906110c2565b90565b6110f3906110de565b90565b90611100906110ea565b600052602052604060002090565b60001c90565b90565b6111236111289161110e565b611114565b90565b6111359054611117565b90565b6111589061115361115d9361114b611086565b5060006110aa565b6110f6565b61112b565b90565b600090565b61117790611171611160565b50611a46565b90565b606090565b6111919061118b61117a565b50611cbe565b90565b9291906111b96111b36111a5610f76565b6111ad611d27565b90611668565b156102bf565b6111c9576111c69361124b565b90565b6111d1610172565b63db98489760e01b8152806111e860048201610727565b0390fd5b6112006111fb61120592610ab8565b61108b565b6101c2565b90565b9061121a611215836105ff565b610549565b918252565b369037565b9061124961123183611208565b9260208061123f86936105ff565b920191039061121f565b565b9061126b9391509161126561126060006111ec565b611224565b92611d63565b600190565b90611283929161127e611160565b611194565b90565b600090565b61129490610467565b90565b906112a19061128b565b600052602052604060002090565b90565b6112be6112c39161110e565b6112af565b90565b6112d090546112b2565b90565b60016112ec6112f2926112e4611286565b506005611297565b016112c6565b90565b91602061131792949361131060408201966000830190610a2a565b0190610a2a565b565b949391929092611327611d27565b8661133a61133483610192565b91610192565b14158061137f575b611358575061135694959390919293611dda565b565b869061137b611365610172565b92839263711bec9160e11b8452600484016112f5565b0390fd5b5061139461138e88839061199e565b156102bf565b611342565b906113b4916113af6113aa826112d3565b611e8e565b6113b6565b565b906113c091611ee7565b50565b906113cd91611399565b565b90806113ea6113e46113df611d27565b610192565b91610192565b036113fb576113f891611f96565b50565b611403610172565b63334bd91960e11b81528061141a60048201610727565b0390fd5b606090565b5190565b91602061144992949361144260408201966000830190610217565b0190610217565b565b9061145d6114588361055e565b610549565b918252565b369037565b9061148c6114748361144b565b92602080611482869361055e565b9201910390611462565b565b600161149a91016101c2565b90565b634e487b7160e01b600052603260045260246000fd5b906114bd826108ef565b8110156114ce576020809102010190565b61149d565b906114dd906101c2565b9052565b906114ea61141e565b506114f482611423565b61150e611508611503846108ef565b6101c2565b916101c2565b036115995761152461151f83611423565b611467565b9161152f60006111ec565b5b8061154b61154561154085611423565b6101c2565b916101c2565b10156115935761158e9061158961157761156685849061203c565b611571878590612052565b90611138565b61158487918490926114b3565b6114d3565b61148e565b611530565b50505090565b6115a56115ab916108ef565b91611423565b906115cd6115b7610172565b928392635b05999160e01b845260048401611427565b0390fd5b6115d9611160565b506115f36115ed6115e86115fc565b610192565b91610192565b1490565b600090565b6116046115f7565b507f000000000000000000000000000000000000000000000000000000000000000090565b90611633906110ea565b600052602052604060002090565b60ff1690565b6116536116589161110e565b611641565b90565b6116659054611647565b90565b61169091600061168561168b9361167d611160565b506005611297565b01611629565b61165b565b90565b6116a79161169f611d27565b919091612068565b565b939291906116cf6116c96116bb610f76565b6116c3611d27565b90611668565b156102bf565b6116df576116dc94611733565b90565b6116e7610172565b63db98489760e01b8152806116fe60048201610727565b0390fd5b5190565b61171090516101c2565b90565b9061171d82611702565b81101561172e576020809102010190565b61149d565b94919293945061174285611702565b9361174c846108ef565b61175e611758876101c2565b916101c2565b146117e55761178191908461177b61177660006111ec565b611224565b92612129565b61178b60006111ec565b5b8061179f611799866101c2565b916101c2565b10156117db576117d6906117d16117bf6117ba8684906114b3565b611706565b6117ca888490611713565b5190612384565b61148e565b61178c565b5092505050600190565b6117ed610172565b6223d71f60e21b81528061180360048201610727565b0390fd5b9061181b939291611816611160565b6116a9565b90565b9392919061184461183e611830610f76565b611838611d27565b90611668565b156102bf565b6118545761185194611877565b90565b61185c610172565b63db98489760e01b81528061187360048201610727565b0390fd5b9261189c916118a1959450908361189661189160006111ec565b611224565b92611d63565b612384565b600190565b906118ba9392916118b5611160565b61181e565b90565b906118d8916118d36118ce826112d3565b611e8e565b6118da565b565b906118e491611f96565b50565b906118f1916118bd565b565b929190611918611912611904610f76565b61190c611d27565b90611668565b156102bf565b611928576119259361194b565b90565b611930610172565b63db98489760e01b81528061194760048201610727565b0390fd5b9061196b9391509161196561196060006111ec565b611224565b92612129565b600190565b90611983929161197e611160565b6118f3565b90565b90611990906110ea565b600052602052604060002090565b6119c3916119b96119be926119b1611160565b506001611986565b611629565b61165b565b90565b9493919290926119d4611d27565b866119e76119e183610192565b91610192565b141580611a2c575b611a055750611a03949593909192936123e8565b565b8690611a28611a12610172565b92839263711bec9160e11b8452600484016112f5565b0390fd5b50611a41611a3b88839061199e565b156102bf565b6119ef565b611a4e611160565b5080611a69611a63637965db0b60e01b610270565b91610270565b14908115611a76575b5090565b611a8091506124a5565b38611a72565b90611a909061108e565b600052602052604060002090565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015611ad4575b6020831014611acf57565b611a9e565b91607f1691611ac4565b60209181520190565b600052602060002090565b9060009291805490611b0d611b0683611ab4565b8094611ade565b91600181169081600014611b665750600114611b29575b505050565b611b369192939450611ae7565b916000925b818410611b4e5750500190388080611b24565b60018160209295939554848601520191019290611b3b565b92949550505060ff1916825215156020020190388080611b24565b90611b8b91611af2565b90565b90611bae611ba792611b9e610172565b93848092611b81565b0383610520565b565b611bb990611b8e565b90565b90565b5190565b905090565b9060009291805490611be3611bdc83611ab4565b8094611bc3565b91600181169081600014611c375750600114611bff575b505050565b611c0c9192939450611ae7565b6000905b838210611c235750500190388080611bfa565b600181602092548486015201910190611c10565b92949550505060ff19168252801515020190388080611bfa565b611c76611c6d92602092611c648161033b565b94858093611bc3565b93849101610348565b0190565b611c8890611c8e9392611bc8565b90611c51565b90565b611cb09291611cbc91611ca2610172565b948592602084019283611c7a565b90810382520383610520565b565b611cc661117a565b50611cdb611cd660048390611a86565b611bb0565b90611ced611ce883611bbc565b611bbf565b611d00611cfa60006111ec565b916101c2565b11600014611d185750611d14906003611c91565b5b90565b611d22915061250d565b611d15565b611d2f6115f7565b50611d38612547565b90565b611d4f611d4a611d5492610ab8565b61108b565b610187565b90565b611d6090611d3b565b90565b91929082611d82611d7c611d776000611d57565b610192565b91610192565b14611dab57611da993611d94916125a3565b90611d9f6000611d57565b93909192936125f9565b565b611dd6611db86000611d57565b611dc0610172565b918291632bfa23e760e11b835260048301610a37565b0390fd5b939192909283611dfb611df5611df06000611d57565b610192565b91610192565b14611e5f5784611e1c611e16611e116000611d57565b610192565b91610192565b14611e3157611e2f9493909192936125f9565b565b611e5b611e3e6000611d57565b611e46610172565b918291626a0d4560e21b835260048301610a37565b0390fd5b611e8a611e6c6000611d57565b611e74610172565b918291632bfa23e760e11b835260048301610a37565b0390fd5b611ea090611e9a611d27565b906126dd565b565b90611eae60ff91610abb565b9181191691161790565b611ec1906102bf565b90565b90565b90611edc611ed7611ee392611eb8565b611ec4565b8254611ea2565b9055565b611eef611160565b50611f04611efe828490611668565b156102bf565b600014611f8f57611f2e6001611f296000611f2160058690611297565b018590611629565b611ec7565b90611f37611d27565b90611f74611f6e611f687f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9561128b565b926110ea565b926110ea565b92611f7d610172565b80611f8781610727565b0390a4600190565b5050600090565b611f9e611160565b50611faa818390611668565b60001461203557611fd46000611fcf6000611fc760058690611297565b018590611629565b611ec7565b90611fdd611d27565b9061201a61201461200e7ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9561128b565b926110ea565b926110ea565b92612023610172565b8061202d81610727565b0390a4600190565b5050600090565b90602080916120496115f7565b50029101015190565b906020809161205f611086565b50029101015190565b9190918261208761208161207c6000611d57565b610192565b91610192565b146120fb576120ab826120a661209f60018590611986565b8690611629565b611ec7565b9190916120f66120e46120de7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31936110ea565b936110ea565b936120ed610172565b918291826102d1565b0390a3565b6121256121086000611d57565b612110610172565b91829162ced3e160e81b835260048301610a37565b0390fd5b919290928261214961214361213e6000611d57565b610192565b91610192565b14612168576121669361215c6000611d57565b93909192936125f9565b565b6121936121756000611d57565b61217d610172565b918291632bfa23e760e11b835260048301610a37565b0390fd5b601f602091010490565b1b90565b919060086121c19102916121bb600019846121a1565b926121a1565b9181191691161790565b90565b91906121e46121df6121ec9361108e565b6121cb565b9083546121a5565b9055565b612202916121fc611086565b916121ce565b565b5b818110612210575050565b8061221e60006001936121f0565b01612205565b9190601f8111612234575b505050565b61224061226593611ae7565b90602061224c84612197565b8301931061226d575b61225e90612197565b0190612204565b38808061222f565b915061225e81929050612255565b1c90565b90612290906000199060080261227b565b191690565b8161229f9161227f565b906002021790565b906122b18161033b565b9067ffffffffffffffff8211612373576122d5826122cf8554611ab4565b85612224565b602090601f831160011461230a579180916122f9936000926122fe575b5050612295565b90555b565b909150015138806122f2565b601f1983169161231985611ae7565b9260005b81811061235b57509160029391856001969410612341575b505050020190556122fc565b612351910151601f84169061227f565b9055388080612335565b9193602060018192878701518155019501920161231d565b61050a565b90612382916122a7565b565b9061239a9061239560048490611a86565b612378565b6123a38161117f565b906123e36123d17f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b9261108e565b926123da610172565b918291826103a8565b0390a2565b90929391836124086124026123fd6000611d57565b610192565b91610192565b14612476578161242961242361241e6000611d57565b610192565b91610192565b14612448576124469461243b916125a3565b9193909192936125f9565b565b6124726124556000611d57565b61245d610172565b918291626a0d4560e21b835260048301610a37565b0390fd5b6124a16124836000611d57565b61248b610172565b918291632bfa23e760e11b835260048301610a37565b0390fd5b6124ad611160565b50806124c86124c2636cdb3d1360e11b610270565b91610270565b1480156124ec575b9081156124dc575b5090565b6124e6915061271f565b386124d8565b50806125076125016303a24d0760e21b610270565b91610270565b146124d0565b5061251661117a565b506125216002611bb0565b90565b5090565b90565b61253f61253a61254492612528565b61108b565b6101c2565b90565b61254f6115f7565b50612559336115d1565b8061257c575b60001461257157601436033560601c90565b612579612745565b90565b5061258960003690612524565b61259c612596601461252b565b916101c2565b101561255f565b916125ac61141e565b506125b561141e565b5060405192600184526020840152604083019160018352602083015260408201604052565b90565b6125f16125ec6125f6926125da565b61108b565b6101c2565b90565b9293919361260b84838790849261283d565b8161262761262161261c6000611d57565b610192565b91610192565b03612634575b5050505050565b61263c611d27565b91612646866108ef565b61265961265360016125dd565b916101c2565b146000146126a35761268c61267b6126989761267560006111ec565b90612052565b9261268660006111ec565b90612052565b92949091929394612e01565b5b388080808061262d565b6126b4959192949091929394612c3c565b612699565b9160206126db9294936126d460408201966000830190610a2a565b01906104ad565b565b906126f26126ec838390611668565b156102bf565b6126fa575050565b61271b612705610172565b92839263e2517d3f60e01b8452600484016126b9565b0390fd5b612727611160565b5061274161273b6301ffc9a760e01b610270565b91610270565b1490565b61274d6115f7565b503390565b61278861278f9461277e606094989795612774608086019a6000870190610a2a565b6020850190610217565b6040830190610217565b0190610217565b565b9061279c91036101c2565b90565b906127ac60001991610abb565b9181191691161790565b906127cb6127c66127d29261108e565b6121cb565b825461279f565b9055565b634e487b7160e01b600052601160045260246000fd5b6127fb612801919392936101c2565b926101c2565b820180921161280c57565b6127d6565b909161282c61283a9360408401908482036000860152610926565b916020818403910152610926565b90565b9392909161284a816108ef565b61286461285e612859856108ef565b6101c2565b916101c2565b03612ae857612871611d27565b9361287c60006111ec565b5b8061289861289261288d866108ef565b6101c2565b916101c2565b10156129db576128a9838290612052565b6128b4858390612052565b90886128d16128cb6128c66000611d57565b610192565b91610192565b03612943575b906129069291876128f96128f36128ee6000611d57565b610192565b91610192565b0361290b575b505061148e565b61287d565b61293661292761292061293c949360006110aa565b8a906110f6565b916129318361112b565b6127ec565b906127b6565b38806128ff565b61296161295c612955600084906110aa565b8b906110f6565b61112b565b8061297461296e856101c2565b916101c2565b106129b157906129a861298d6129069594938490612791565b6129a361299c600085906110aa565b8d906110f6565b6127b6565b909192506128d7565b906129d7908a92936129c1610172565b9485946303dee4c560e01b865260048601612752565b0390fd5b5094909291926129ea816108ef565b6129fd6129f760016125dd565b916101c2565b14600014612a8957612a1c612a2d91612a1660006111ec565b90612052565b93612a2760006111ec565b90612052565b9390919293612a6e612a68612a627fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62946110ea565b946110ea565b946110ea565b94612a83612a7a610172565b92839283611427565b0390a45b565b929390919293612acb612ac5612abf7f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb946110ea565b946110ea565b946110ea565b94612ae0612ad7610172565b92839283612811565b0390a4612a87565b612af4612afa916108ef565b916108ef565b90612b1c612b06610172565b928392635b05999160e01b845260048401611427565b0390fd5b612b29906110c2565b90565b612b3590612b20565b90565b612b41906110de565b90565b60e01b90565b90505190612b578261027c565b565b90602082820312612b7357612b7091600001612b4a565b90565b61017d565b60209181520190565b612ba0612ba9602093612bae93612b9781611bbf565b93848093612b78565b95869101610348565b61036d565b0190565b9390612bed90612c099694612be0612bfb95612bd660a08a019460008b0190610a2a565b6020890190610a2a565b8682036040880152610926565b908482036060860152610926565b916080818403910152612b81565b90565b606090565b3d600014612c2e57612c223d611208565b903d6000602084013e5b565b612c36612c0c565b90612c2c565b94909194939293853b612c58612c5260006111ec565b916101c2565b11612c66575b505050505050565b6000612ca391612cae602096612c83612c7e8b612b2c565b612b38565b9563bc197c81939799919091612c97610172565b9a8b998a988997612b44565b875260048701612bb2565b03925af18091600092612d7f575b5015600014612d3557506001612cd957505b388080808080612c5e565b612ce1612c11565b90612ceb82611bbf565b612cfe612cf860006111ec565b916101c2565b14600014612d2c57612d2890612d12610172565b918291632bfa23e760e11b835260048301610a37565b0390fd5b50805190602001fd5b612d4e612d4863bc197c8160e01b610270565b91610270565b03612d595750612cce565b612d7b90612d65610172565b918291632bfa23e760e11b835260048301610a37565b0390fd5b612da191925060203d8111612da8575b612d998183610520565b810190612b59565b9038612cbc565b503d612d8f565b9193612de7612dfe9694612ddd612df19497612dd360a08801996000890190610a2a565b6020870190610a2a565b6040850190610217565b6060830190610217565b6080818403910152612b81565b90565b94909194939293853b612e1d612e1760006111ec565b916101c2565b11612e2b575b505050505050565b6000612e6891612e73602096612e48612e438b612b2c565b612b38565b9563f23a6e61939799919091612e5c610172565b9a8b998a988997612b44565b875260048701612daf565b03925af18091600092612f44575b5015600014612efa57506001612e9e57505b388080808080612e23565b612ea6612c11565b90612eb082611bbf565b612ec3612ebd60006111ec565b916101c2565b14600014612ef157612eed90612ed7610172565b918291632bfa23e760e11b835260048301610a37565b0390fd5b50805190602001fd5b612f13612f0d63f23a6e6160e01b610270565b91610270565b03612f1e5750612e93565b612f4090612f2a610172565b918291632bfa23e760e11b835260048301610a37565b0390fd5b612f6691925060203d8111612f6d575b612f5e8183610520565b810190612b59565b9038612e81565b503d612f5456fea26469706673582212200354ad5e0c84b92da68c56f8e884fd508cb9ac84d4e8b5949012bfd137a21cfa64736f6c63430008160033";
        public BlockRacersAssetsDeploymentBase() : base(BYTECODE) { }
        public BlockRacersAssetsDeploymentBase(string byteCode) : base(byteCode) { }
        [Parameter("address", "trustedForwarder", 1)]
        public virtual string TrustedForwarder { get; set; }
        [Parameter("string", "baseUri_", 2)]
        public virtual string Baseuri { get; set; }
        [Parameter("address", "_admin", 3)]
        public virtual string Admin { get; set; }
    }

    public partial class BlockRacersFunction : BlockRacersFunctionBase { }

    [Function("BLOCK_RACERS", "bytes32")]
    public class BlockRacersFunctionBase : FunctionMessage
    {

    }

    public partial class DefaultAdminRoleFunction : DefaultAdminRoleFunctionBase { }

    [Function("DEFAULT_ADMIN_ROLE", "bytes32")]
    public class DefaultAdminRoleFunctionBase : FunctionMessage
    {

    }

    public partial class BalanceOfFunction : BalanceOfFunctionBase { }

    [Function("balanceOf", "uint256")]
    public class BalanceOfFunctionBase : FunctionMessage
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
        [Parameter("uint256", "id", 2)]
        public virtual BigInteger Id { get; set; }
    }

    public partial class BalanceOfBatchFunction : BalanceOfBatchFunctionBase { }

    [Function("balanceOfBatch", "uint256[]")]
    public class BalanceOfBatchFunctionBase : FunctionMessage
    {
        [Parameter("address[]", "accounts", 1)]
        public virtual List<string> Accounts { get; set; }
        [Parameter("uint256[]", "ids", 2)]
        public virtual List<BigInteger> Ids { get; set; }
    }

    public partial class GetRoleAdminFunction : GetRoleAdminFunctionBase { }

    [Function("getRoleAdmin", "bytes32")]
    public class GetRoleAdminFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "role", 1)]
        public virtual byte[] Role { get; set; }
    }

    public partial class GrantRoleFunction : GrantRoleFunctionBase { }

    [Function("grantRole")]
    public class GrantRoleFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "role", 1)]
        public virtual byte[] Role { get; set; }
        [Parameter("address", "account", 2)]
        public virtual string Account { get; set; }
    }

    public partial class HasRoleFunction : HasRoleFunctionBase { }

    [Function("hasRole", "bool")]
    public class HasRoleFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "role", 1)]
        public virtual byte[] Role { get; set; }
        [Parameter("address", "account", 2)]
        public virtual string Account { get; set; }
    }

    public partial class IsApprovedForAllFunction : IsApprovedForAllFunctionBase { }

    [Function("isApprovedForAll", "bool")]
    public class IsApprovedForAllFunctionBase : FunctionMessage
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
        [Parameter("address", "operator", 2)]
        public virtual string Operator { get; set; }
    }

    public partial class IsTrustedForwarderFunction : IsTrustedForwarderFunctionBase { }

    [Function("isTrustedForwarder", "bool")]
    public class IsTrustedForwarderFunctionBase : FunctionMessage
    {
        [Parameter("address", "forwarder", 1)]
        public virtual string Forwarder { get; set; }
    }

    public partial class MintFunction : MintFunctionBase { }

    [Function("mint", "bool")]
    public class MintFunctionBase : FunctionMessage
    {
        [Parameter("address", "to", 1)]
        public virtual string To { get; set; }
        [Parameter("uint256", "id", 2)]
        public virtual BigInteger Id { get; set; }
        [Parameter("uint256", "value", 3)]
        public virtual BigInteger Value { get; set; }
    }

    public partial class Mint1Function : Mint1FunctionBase { }

    [Function("mint", "bool")]
    public class Mint1FunctionBase : FunctionMessage
    {
        [Parameter("address", "to", 1)]
        public virtual string To { get; set; }
        [Parameter("uint256", "id", 2)]
        public virtual BigInteger Id { get; set; }
        [Parameter("uint256", "value", 3)]
        public virtual BigInteger Value { get; set; }
        [Parameter("string", "newUri", 4)]
        public virtual string NewUri { get; set; }
    }

    public partial class MintBatch1Function : MintBatch1FunctionBase { }

    [Function("mintBatch", "bool")]
    public class MintBatch1FunctionBase : FunctionMessage
    {
        [Parameter("address", "to", 1)]
        public virtual string To { get; set; }
        [Parameter("uint256[]", "ids", 2)]
        public virtual List<BigInteger> Ids { get; set; }
        [Parameter("uint256[]", "values", 3)]
        public virtual List<BigInteger> Values { get; set; }
        [Parameter("string[]", "uriList", 4)]
        public virtual List<string> UriList { get; set; }
    }

    public partial class MintBatchFunction : MintBatchFunctionBase { }

    [Function("mintBatch", "bool")]
    public class MintBatchFunctionBase : FunctionMessage
    {
        [Parameter("address", "to", 1)]
        public virtual string To { get; set; }
        [Parameter("uint256[]", "ids", 2)]
        public virtual List<BigInteger> Ids { get; set; }
        [Parameter("uint256[]", "values", 3)]
        public virtual List<BigInteger> Values { get; set; }
    }

    public partial class RenounceRoleFunction : RenounceRoleFunctionBase { }

    [Function("renounceRole")]
    public class RenounceRoleFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "role", 1)]
        public virtual byte[] Role { get; set; }
        [Parameter("address", "callerConfirmation", 2)]
        public virtual string CallerConfirmation { get; set; }
    }

    public partial class RevokeRoleFunction : RevokeRoleFunctionBase { }

    [Function("revokeRole")]
    public class RevokeRoleFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "role", 1)]
        public virtual byte[] Role { get; set; }
        [Parameter("address", "account", 2)]
        public virtual string Account { get; set; }
    }

    public partial class SafeBatchTransferFromFunction : SafeBatchTransferFromFunctionBase { }

    [Function("safeBatchTransferFrom")]
    public class SafeBatchTransferFromFunctionBase : FunctionMessage
    {
        [Parameter("address", "from", 1)]
        public virtual string From { get; set; }
        [Parameter("address", "to", 2)]
        public virtual string To { get; set; }
        [Parameter("uint256[]", "ids", 3)]
        public virtual List<BigInteger> Ids { get; set; }
        [Parameter("uint256[]", "values", 4)]
        public virtual List<BigInteger> Values { get; set; }
        [Parameter("bytes", "data", 5)]
        public virtual byte[] Data { get; set; }
    }

    public partial class SafeTransferFromFunction : SafeTransferFromFunctionBase { }

    [Function("safeTransferFrom")]
    public class SafeTransferFromFunctionBase : FunctionMessage
    {
        [Parameter("address", "from", 1)]
        public virtual string From { get; set; }
        [Parameter("address", "to", 2)]
        public virtual string To { get; set; }
        [Parameter("uint256", "id", 3)]
        public virtual BigInteger Id { get; set; }
        [Parameter("uint256", "value", 4)]
        public virtual BigInteger Value { get; set; }
        [Parameter("bytes", "data", 5)]
        public virtual byte[] Data { get; set; }
    }

    public partial class SetApprovalForAllFunction : SetApprovalForAllFunctionBase { }

    [Function("setApprovalForAll")]
    public class SetApprovalForAllFunctionBase : FunctionMessage
    {
        [Parameter("address", "operator", 1)]
        public virtual string Operator { get; set; }
        [Parameter("bool", "approved", 2)]
        public virtual bool Approved { get; set; }
    }

    public partial class SupportsInterfaceFunction : SupportsInterfaceFunctionBase { }

    [Function("supportsInterface", "bool")]
    public class SupportsInterfaceFunctionBase : FunctionMessage
    {
        [Parameter("bytes4", "interfaceId", 1)]
        public virtual byte[] InterfaceId { get; set; }
    }

    public partial class TrustedForwarderFunction : TrustedForwarderFunctionBase { }

    [Function("trustedForwarder", "address")]
    public class TrustedForwarderFunctionBase : FunctionMessage
    {

    }

    public partial class UriFunction : UriFunctionBase { }

    [Function("uri", "string")]
    public class UriFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "tokenId", 1)]
        public virtual BigInteger TokenId { get; set; }
    }

    public partial class ApprovalForAllEventDTO : ApprovalForAllEventDTOBase { }

    [Event("ApprovalForAll")]
    public class ApprovalForAllEventDTOBase : IEventDTO
    {
        [Parameter("address", "account", 1, true )]
        public virtual string Account { get; set; }
        [Parameter("address", "operator", 2, true )]
        public virtual string Operator { get; set; }
        [Parameter("bool", "approved", 3, false )]
        public virtual bool Approved { get; set; }
    }

    public partial class RoleAdminChangedEventDTO : RoleAdminChangedEventDTOBase { }

    [Event("RoleAdminChanged")]
    public class RoleAdminChangedEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "role", 1, true )]
        public virtual byte[] Role { get; set; }
        [Parameter("bytes32", "previousAdminRole", 2, true )]
        public virtual byte[] PreviousAdminRole { get; set; }
        [Parameter("bytes32", "newAdminRole", 3, true )]
        public virtual byte[] NewAdminRole { get; set; }
    }

    public partial class RoleGrantedEventDTO : RoleGrantedEventDTOBase { }

    [Event("RoleGranted")]
    public class RoleGrantedEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "role", 1, true )]
        public virtual byte[] Role { get; set; }
        [Parameter("address", "account", 2, true )]
        public virtual string Account { get; set; }
        [Parameter("address", "sender", 3, true )]
        public virtual string Sender { get; set; }
    }

    public partial class RoleRevokedEventDTO : RoleRevokedEventDTOBase { }

    [Event("RoleRevoked")]
    public class RoleRevokedEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "role", 1, true )]
        public virtual byte[] Role { get; set; }
        [Parameter("address", "account", 2, true )]
        public virtual string Account { get; set; }
        [Parameter("address", "sender", 3, true )]
        public virtual string Sender { get; set; }
    }

    public partial class TransferBatchEventDTO : TransferBatchEventDTOBase { }

    [Event("TransferBatch")]
    public class TransferBatchEventDTOBase : IEventDTO
    {
        [Parameter("address", "operator", 1, true )]
        public virtual string Operator { get; set; }
        [Parameter("address", "from", 2, true )]
        public virtual string From { get; set; }
        [Parameter("address", "to", 3, true )]
        public virtual string To { get; set; }
        [Parameter("uint256[]", "ids", 4, false )]
        public virtual List<BigInteger> Ids { get; set; }
        [Parameter("uint256[]", "values", 5, false )]
        public virtual List<BigInteger> Values { get; set; }
    }

    public partial class TransferSingleEventDTO : TransferSingleEventDTOBase { }

    [Event("TransferSingle")]
    public class TransferSingleEventDTOBase : IEventDTO
    {
        [Parameter("address", "operator", 1, true )]
        public virtual string Operator { get; set; }
        [Parameter("address", "from", 2, true )]
        public virtual string From { get; set; }
        [Parameter("address", "to", 3, true )]
        public virtual string To { get; set; }
        [Parameter("uint256", "id", 4, false )]
        public virtual BigInteger Id { get; set; }
        [Parameter("uint256", "value", 5, false )]
        public virtual BigInteger Value { get; set; }
    }

    public partial class UriEventDTO : UriEventDTOBase { }

    [Event("URI")]
    public class UriEventDTOBase : IEventDTO
    {
        [Parameter("string", "value", 1, false )]
        public virtual string Value { get; set; }
        [Parameter("uint256", "id", 2, true )]
        public virtual BigInteger Id { get; set; }
    }

    public partial class AccessControlBadConfirmationError : AccessControlBadConfirmationErrorBase { }
    [Error("AccessControlBadConfirmation")]
    public class AccessControlBadConfirmationErrorBase : IErrorDTO
    {
    }

    public partial class AccessControlUnauthorizedAccountError : AccessControlUnauthorizedAccountErrorBase { }

    [Error("AccessControlUnauthorizedAccount")]
    public class AccessControlUnauthorizedAccountErrorBase : IErrorDTO
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
        [Parameter("bytes32", "neededRole", 2)]
        public virtual byte[] NeededRole { get; set; }
    }

    public partial class ERC1155InsufficientBalanceError : ERC1155InsufficientBalanceErrorBase { }

    [Error("ERC1155InsufficientBalance")]
    public class ERC1155InsufficientBalanceErrorBase : IErrorDTO
    {
        [Parameter("address", "sender", 1)]
        public virtual string Sender { get; set; }
        [Parameter("uint256", "balance", 2)]
        public virtual BigInteger Balance { get; set; }
        [Parameter("uint256", "needed", 3)]
        public virtual BigInteger Needed { get; set; }
        [Parameter("uint256", "tokenId", 4)]
        public virtual BigInteger TokenId { get; set; }
    }

    public partial class ERC1155InvalidApproverError : ERC1155InvalidApproverErrorBase { }

    [Error("ERC1155InvalidApprover")]
    public class ERC1155InvalidApproverErrorBase : IErrorDTO
    {
        [Parameter("address", "approver", 1)]
        public virtual string Approver { get; set; }
    }

    public partial class ERC1155InvalidArrayLengthError : ERC1155InvalidArrayLengthErrorBase { }

    [Error("ERC1155InvalidArrayLength")]
    public class ERC1155InvalidArrayLengthErrorBase : IErrorDTO
    {
        [Parameter("uint256", "idsLength", 1)]
        public virtual BigInteger IdsLength { get; set; }
        [Parameter("uint256", "valuesLength", 2)]
        public virtual BigInteger ValuesLength { get; set; }
    }

    public partial class ERC1155InvalidOperatorError : ERC1155InvalidOperatorErrorBase { }

    [Error("ERC1155InvalidOperator")]
    public class ERC1155InvalidOperatorErrorBase : IErrorDTO
    {
        [Parameter("address", "operator", 1)]
        public virtual string Operator { get; set; }
    }

    public partial class ERC1155InvalidReceiverError : ERC1155InvalidReceiverErrorBase { }

    [Error("ERC1155InvalidReceiver")]
    public class ERC1155InvalidReceiverErrorBase : IErrorDTO
    {
        [Parameter("address", "receiver", 1)]
        public virtual string Receiver { get; set; }
    }

    public partial class ERC1155InvalidSenderError : ERC1155InvalidSenderErrorBase { }

    [Error("ERC1155InvalidSender")]
    public class ERC1155InvalidSenderErrorBase : IErrorDTO
    {
        [Parameter("address", "sender", 1)]
        public virtual string Sender { get; set; }
    }

    public partial class ERC1155MissingApprovalForAllError : ERC1155MissingApprovalForAllErrorBase { }

    [Error("ERC1155MissingApprovalForAll")]
    public class ERC1155MissingApprovalForAllErrorBase : IErrorDTO
    {
        [Parameter("address", "operator", 1)]
        public virtual string Operator { get; set; }
        [Parameter("address", "owner", 2)]
        public virtual string Owner { get; set; }
    }

    public partial class NotAuthorizedGameContractError : NotAuthorizedGameContractErrorBase { }
    [Error("NotAuthorizedGameContract")]
    public class NotAuthorizedGameContractErrorBase : IErrorDTO
    {
    }

    public partial class ReentrancyGuardReentrantCallError : ReentrancyGuardReentrantCallErrorBase { }
    [Error("ReentrancyGuardReentrantCall")]
    public class ReentrancyGuardReentrantCallErrorBase : IErrorDTO
    {
    }

    public partial class UriArrayLengthInvalidError : UriArrayLengthInvalidErrorBase { }
    [Error("UriArrayLengthInvalid")]
    public class UriArrayLengthInvalidErrorBase : IErrorDTO
    {
    }

    public partial class BlockRacersOutputDTO : BlockRacersOutputDTOBase { }

    [FunctionOutput]
    public class BlockRacersOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bytes32", "", 1)]
        public virtual byte[] ReturnValue1 { get; set; }
    }

    public partial class DefaultAdminRoleOutputDTO : DefaultAdminRoleOutputDTOBase { }

    [FunctionOutput]
    public class DefaultAdminRoleOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bytes32", "", 1)]
        public virtual byte[] ReturnValue1 { get; set; }
    }

    public partial class BalanceOfOutputDTO : BalanceOfOutputDTOBase { }

    [FunctionOutput]
    public class BalanceOfOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class BalanceOfBatchOutputDTO : BalanceOfBatchOutputDTOBase { }

    [FunctionOutput]
    public class BalanceOfBatchOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256[]", "", 1)]
        public virtual List<BigInteger> ReturnValue1 { get; set; }
    }

    public partial class GetRoleAdminOutputDTO : GetRoleAdminOutputDTOBase { }

    [FunctionOutput]
    public class GetRoleAdminOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bytes32", "", 1)]
        public virtual byte[] ReturnValue1 { get; set; }
    }



    public partial class HasRoleOutputDTO : HasRoleOutputDTOBase { }

    [FunctionOutput]
    public class HasRoleOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class IsApprovedForAllOutputDTO : IsApprovedForAllOutputDTOBase { }

    [FunctionOutput]
    public class IsApprovedForAllOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class IsTrustedForwarderOutputDTO : IsTrustedForwarderOutputDTOBase { }

    [FunctionOutput]
    public class IsTrustedForwarderOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }



















    public partial class SupportsInterfaceOutputDTO : SupportsInterfaceOutputDTOBase { }

    [FunctionOutput]
    public class SupportsInterfaceOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class TrustedForwarderOutputDTO : TrustedForwarderOutputDTOBase { }

    [FunctionOutput]
    public class TrustedForwarderOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class UriOutputDTO : UriOutputDTOBase { }

    [FunctionOutput]
    public class UriOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("string", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }
}
