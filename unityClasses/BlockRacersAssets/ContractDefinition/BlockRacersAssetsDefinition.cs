using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace BlockRacersAssets.BlockRacersAssets.ContractDefinition
{


    public partial class BlockRacersAssetsDeployment : BlockRacersAssetsDeploymentBase
    {
        public BlockRacersAssetsDeployment() : base(BYTECODE) { }
        public BlockRacersAssetsDeployment(string byteCode) : base(byteCode) { }
    }

    public class BlockRacersAssetsDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "0x60a06040523462000041576200001f6200001862000219565b91620002a2565b6200002962000047565b612d5362000b988239608051816114000152612d5390f35b6200004d565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906200007e9062000052565b810190811060018060401b038211176200009757604052565b6200005c565b90620000b4620000ac62000047565b928362000072565b565b600080fd5b600080fd5b60018060a01b031690565b620000d690620000c0565b90565b620000e481620000cb565b03620000ec57565b600080fd5b905051906200010082620000d9565b565b600080fd5b600080fd5b60018060401b0381116200012b576200012760209162000052565b0190565b6200005c565b60005b83811062000146575050906000910152565b80602091830151818501520162000134565b90929192620001716200016b826200010c565b6200009d565b9381855260208501908284011162000190576200018e9262000131565b565b62000107565b9080601f83011215620001b757816020620001b49351910162000158565b90565b62000102565b90916060828403126200021357620001d98360008401620000f1565b9260208301519060018060401b0382116200020d5762000200816200020a93860162000196565b93604001620000f1565b90565b620000bb565b620000b6565b6200023c620038eb8038038062000230816200009d565b928339810190620001bd565b909192565b90565b90565b60001b90565b62000266620002606200026c9262000241565b62000247565b62000244565b90565b6200027b60006200024d565b90565b7f857e9fc2ee598869c8299d2471fb88ab20fcc352ca6210b82625155e2220c8af90565b620002b390620002c3939262000383565b620002bd6200026f565b6200069a565b50620002e3620002d26200027e565b620002dc6200026f565b906200079c565b565b90565b90565b90565b62000307620003016200030d92620002e5565b620002eb565b620002e8565b90565b6200031c6001620002ee565b90565b906200032e6000199162000247565b9181191691161790565b620003516200034b6200035792620002e8565b620002eb565b620002e8565b90565b90565b9062000377620003716200037f9262000338565b6200035a565b82546200031f565b9055565b906200038f91620003a7565b620003a56200039d62000310565b60066200035d565b565b90620003b39162000537565b565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015620003ee575b6020831014620003e857565b620003b5565b91607f1691620003dc565b600052602060002090565b601f602091010490565b1b90565b91906008620004329102916200042b600019846200040e565b926200040e565b9181191691161790565b91906200045762000451620004609362000338565b6200035a565b90835462000412565b9055565b600090565b6200047f916200047862000464565b916200043c565b565b5b8181106200048e575050565b806200049e600060019362000469565b0162000482565b9190601f8111620004b6575b505050565b620004c5620004f093620003f9565b906020620004d38462000404565b83019310620004f9575b620004e89062000404565b019062000481565b388080620004b1565b9150620004e881929050620004dd565b6200052260006200051b8354620003cb565b83620004a5565b600080019055565b620005359062000509565b565b90620005439162000551565b6200054f60036200052a565b565b62000560620005669262000568565b620009ba565b565b620005739062000575565b565b620005809062000582565b565b6200058d906200058f565b565b6200059a906200059c565b565b620005a790620005a9565b565b620005b490620005b6565b565b608052565b600090565b151590565b620005d09062000244565b90565b90620005df90620005c5565b600052602052604060002090565b62000606620006006200060c92620000c0565b620002eb565b620000c0565b90565b6200061a90620005ed565b90565b62000628906200060f565b90565b9062000637906200061d565b600052602052604060002090565b906200065360ff9162000247565b9181191691161790565b6200066890620005c0565b90565b90565b90620006886200068262000690926200065d565b6200066b565b825462000645565b9055565b60000190565b620006a4620005bb565b50620006bd620006b6828490620009f6565b15620005c0565b6000146200075b57620006ee6001620006e86000620006df60058690620005d3565b0185906200062b565b6200066e565b90620006f962000a2e565b906200073c620007356200072e7f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d95620005c5565b926200061d565b926200061d565b926200074762000047565b80620007538162000694565b0390a4600190565b5050600090565b60001c90565b620007739062000762565b90565b90620007906200078a6200079892620005c5565b62000768565b82546200031f565b9055565b90620007a88262000a75565b91620007c5826001620007be60058590620005d3565b0162000776565b916200080862000801620007fa7fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff95620005c5565b92620005c5565b92620005c5565b926200081362000047565b806200081f8162000694565b0390a4565b5190565b600052602060002090565b9190601f811162000844575b505050565b620008536200087e9362000828565b906020620008618462000404565b8301931062000887575b620008769062000404565b019062000481565b3880806200083f565b915062000876819290506200086b565b1c90565b90620008ae906000199060080262000897565b191690565b81620008bf916200089b565b906002021790565b90620008d38162000824565b9060018060401b038211620009a657620008fa82620008f38554620003cb565b8562000833565b602090601f83116001146200093457918091620009229360009262000927575b5050620008b3565b90555b565b909150015138806200091a565b601f19831691620009458562000828565b9260005b8181106200098d5750916002939185600196941062000970575b5050500201905562000925565b62000982910151601f8416906200089b565b905538808062000963565b9193602060018192878701518155019501920162000949565b6200005c565b90620009b891620008c7565b565b620009c7906002620009ac565b565b60ff1690565b620009de620009e49162000762565b620009c9565b90565b620009f39054620009cf565b90565b62000a2691600062000a1962000a209362000a10620005bb565b506005620005d3565b016200062b565b620009e7565b90565b600090565b62000a3862000a29565b5062000a4362000ac6565b90565b600090565b90565b62000a5d62000a639162000762565b62000a4b565b90565b62000a72905462000a4e565b90565b600162000a9362000a9a9262000a8a62000a46565b506005620005d3565b0162000a66565b90565b5090565b90565b62000abd62000ab762000ac39262000aa1565b620002eb565b620002e8565b90565b62000ad062000a29565b5062000adc3362000b31565b8062000b03575b60001462000af657601436033560601c90565b62000b0062000b5f565b90565b5062000b126000369062000a9d565b62000b2962000b22601462000aa4565b91620002e8565b101562000ae3565b62000b3b620005bb565b5062000b5b62000b5462000b4e62000b7d565b620000cb565b91620000cb565b1490565b62000b6962000a29565b503390565b62000b7a9051620000cb565b90565b62000b8762000a29565b5062000b94608062000b6e565b9056fe60806040526004361015610013575b610f50565b61001e60003561014c565b8062fdd58e1461014757806301ffc9a7146101425780630e89341c1461013d578063248a9ca3146101385780632eb2c2d6146101335780632f2ff15d1461012e57806336568abe146101295780634e1273f414610124578063572b6c051461011f5780637da0a8771461011a57806391d1485414610115578063a217fddf14610110578063a22cb4651461010b578063a55784ef14610106578063bb7fde7114610101578063d547741f146100fc578063e985e9c5146100f7578063ec49c9a3146100f25763f242432a0361000e57610f19565b610e74565b610e0f565b610dad565b610d74565b610cdb565b610aeb565b610a64565b6109f1565b6109bc565b610954565b6108ff565b610735565b610701565b61069c565b61043f565b6103a1565b6102c7565b61021a565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b60018060a01b031690565b61017b90610167565b90565b61018781610172565b0361018e57565b600080fd5b905035906101a08261017e565b565b90565b6101ae816101a2565b036101b557565b600080fd5b905035906101c7826101a5565b565b91906040838203126101f257806101e66101ef9260008601610193565b936020016101ba565b90565b61015d565b610200906101a2565b9052565b9190610218906000602085019401906101f7565b565b3461024b576102476102366102303660046101c9565b90611007565b61023e610152565b91829182610204565b0390f35b610158565b63ffffffff60e01b1690565b61026581610250565b0361026c57565b600080fd5b9050359061027e8261025c565b565b9060208282031261029a5761029791600001610271565b90565b61015d565b151590565b6102ad9061029f565b9052565b91906102c5906000602085019401906102a4565b565b346102f7576102f36102e26102dd366004610280565b611034565b6102ea610152565b918291826102b1565b0390f35b610158565b9060208282031261031657610313916000016101ba565b90565b61015d565b5190565b60209181520190565b60005b83811061033c575050906000910152565b80602091830151818501520161032b565b601f801991011690565b61037661037f6020936103849361036d8161031b565b9384809361031f565b95869101610328565b61034d565b0190565b61039e9160208201916000818403910152610357565b90565b346103d1576103cd6103bc6103b73660046102fc565b61104e565b6103c4610152565b91829182610388565b0390f35b610158565b90565b6103e2816103d6565b036103e957565b600080fd5b905035906103fb826103d9565b565b9060208282031261041757610414916000016103ee565b90565b61015d565b610425906103d6565b9052565b919061043d9060006020850194019061041c565b565b3461046f5761046b61045a6104553660046103fd565b6110b0565b610462610152565b91829182610429565b0390f35b610158565b600080fd5b634e487b7160e01b600052604160045260246000fd5b906104999061034d565b810190811067ffffffffffffffff8211176104b357604052565b610479565b906104cb6104c4610152565b928361048f565b565b67ffffffffffffffff81116104e55760208091020190565b610479565b600080fd5b909291926105046104ff826104cd565b6104b8565b938185526020808601920283019281841161054157915b8383106105285750505050565b6020809161053684866101ba565b81520192019161051b565b6104ea565b9080601f8301121561056457816020610561933591016104ef565b90565b610474565b600080fd5b67ffffffffffffffff811161058c5761058860209161034d565b0190565b610479565b90826000939282370152565b909291926105b26105ad8261056e565b6104b8565b938185526020850190828401116105ce576105cc92610591565b565b610569565b9080601f830112156105f1578160206105ee9335910161059d565b90565b610474565b91909160a081840312610691576106108360008301610193565b9261061e8160208401610193565b92604083013567ffffffffffffffff811161068c578261063f918501610546565b92606081013567ffffffffffffffff81116106875783610660918301610546565b92608082013567ffffffffffffffff81116106825761067f92016105d3565b90565b610162565b610162565b610162565b61015d565b60000190565b346106ce576106b86106af3660046105f6565b939290926110f6565b6106c0610152565b806106ca81610696565b0390f35b610158565b91906040838203126106fc57806106f06106f992600086016103ee565b93602001610193565b90565b61015d565b346107305761071a6107143660046106d3565b906111a0565b610722610152565b8061072c81610696565b0390f35b610158565b346107645761074e6107483660046106d3565b906111ac565b610756610152565b8061076081610696565b0390f35b610158565b67ffffffffffffffff81116107815760208091020190565b610479565b9092919261079b61079682610769565b6104b8565b93818552602080860192028301928184116107d857915b8383106107bf5750505050565b602080916107cd8486610193565b8152019201916107b2565b6104ea565b9080601f830112156107fb578160206107f893359101610786565b90565b610474565b91909160408184031261085957600081013567ffffffffffffffff8111610854578361082d9183016107dd565b92602082013567ffffffffffffffff811161084f5761084c9201610546565b90565b610162565b610162565b61015d565b5190565b60209181520190565b60200190565b61087a906101a2565b9052565b9061088b81602093610871565b0190565b60200190565b906108b26108ac6108a58461085e565b8093610862565b9261086b565b9060005b8181106108c35750505090565b9091926108dc6108d6600192865161087e565b9461088f565b91019190916108b6565b6108fc9160208201916000818403910152610895565b90565b346109305761092c61091b610915366004610800565b906112da565b610923610152565b918291826108e6565b0390f35b610158565b9060208282031261094f5761094c91600001610193565b90565b61015d565b346109845761098061096f61096a366004610935565b6113ca565b610977610152565b918291826102b1565b0390f35b610158565b600091031261099457565b61015d565b6109a290610172565b9052565b91906109ba90600060208501940190610999565b565b346109ec576109cc366004610989565b6109e86109d76113f5565b6109df610152565b918291826109a6565b0390f35b610158565b34610a2257610a1e610a0d610a073660046106d3565b90611461565b610a15610152565b918291826102b1565b0390f35b610158565b90565b60001b90565b610a44610a3f610a4992610a27565b610a2a565b6103d6565b90565b610a566000610a30565b90565b610a61610a4c565b90565b34610a9457610a74366004610989565b610a90610a7f610a59565b610a87610152565b91829182610429565b0390f35b610158565b610aa28161029f565b03610aa957565b600080fd5b90503590610abb82610a99565b565b9190604083820312610ae65780610ada610ae39260008601610193565b93602001610aae565b90565b61015d565b34610b1a57610b04610afe366004610abd565b9061148c565b610b0c610152565b80610b1681610696565b0390f35b610158565b67ffffffffffffffff8111610b375760208091020190565b610479565b67ffffffffffffffff8111610b5a57610b5660209161034d565b0190565b610479565b90929192610b74610b6f82610b3c565b6104b8565b93818552602085019082840111610b9057610b8e92610591565b565b610569565b9080601f83011215610bb357816020610bb093359101610b5f565b90565b610474565b929190610bcc610bc782610b1f565b6104b8565b9381855260208086019202810191838311610c235781905b838210610bf2575050505050565b813567ffffffffffffffff8111610c1e57602091610c138784938701610b95565b815201910190610be4565b610474565b6104ea565b9080601f83011215610c4657816020610c4393359101610bb8565b90565b610474565b90608082820312610cd657610c638160008401610193565b92602083013567ffffffffffffffff8111610cd15782610c84918501610546565b92604081013567ffffffffffffffff8111610ccc5783610ca5918301610546565b92606082013567ffffffffffffffff8111610cc757610cc49201610c28565b90565b610162565b610162565b610162565b61015d565b34610d0f57610d0b610cfa610cf1366004610c4b565b92919091611643565b610d02610152565b918291826102b1565b0390f35b610158565b90608082820312610d6f57610d2c8160008401610193565b92610d3a82602085016101ba565b92610d4883604083016101ba565b92606082013567ffffffffffffffff8111610d6a57610d679201610b95565b90565b610162565b61015d565b34610da857610da4610d93610d8a366004610d14565b929190916116e2565b610d9b610152565b918291826102b1565b0390f35b610158565b34610ddc57610dc6610dc03660046106d3565b90611723565b610dce610152565b80610dd881610696565b0390f35b610158565b9190604083820312610e0a5780610dfe610e079260008601610193565b93602001610193565b90565b61015d565b34610e4057610e3c610e2b610e25366004610de1565b90611747565b610e33610152565b918291826102b1565b0390f35b610158565b7f857e9fc2ee598869c8299d2471fb88ab20fcc352ca6210b82625155e2220c8af90565b610e71610e45565b90565b34610ea457610e84366004610989565b610ea0610e8f610e69565b610e97610152565b91829182610429565b0390f35b610158565b91909160a081840312610f1457610ec38360008301610193565b92610ed18160208401610193565b92610edf82604085016101ba565b92610eed83606083016101ba565b92608082013567ffffffffffffffff8111610f0f57610f0c92016105d3565b90565b610162565b61015d565b34610f4b57610f35610f2c366004610ea9565b9392909261176f565b610f3d610152565b80610f4781610696565b0390f35b610158565b600080fd5b600090565b90565b610f71610f6c610f76926101a2565b610f5a565b6101a2565b90565b90610f8390610f5d565b600052602052604060002090565b610fa5610fa0610faa92610167565b610f5a565b610167565b90565b610fb690610f91565b90565b610fc290610fad565b90565b90610fcf90610fb9565b600052602052604060002090565b60001c90565b90565b610ff2610ff791610fdd565b610fe3565b90565b6110049054610fe6565b90565b6110279061102261102c9361101a610f55565b506000610f79565b610fc5565b610ffa565b90565b600090565b6110469061104061102f565b506117ef565b90565b606090565b6110609061105a611049565b50611a67565b90565b600090565b611071906103d6565b90565b9061107e90611068565b600052602052604060002090565b90565b61109b6110a091610fdd565b61108c565b90565b6110ad905461108f565b90565b60016110c96110cf926110c1611063565b506005611074565b016110a3565b90565b9160206110f49294936110ed60408201966000830190610999565b0190610999565b565b949391929092611104611ad0565b8661111761111183610172565b91610172565b14158061115c575b611135575061113394959390919293611b0c565b565b8690611158611142610152565b92839263711bec9160e11b8452600484016110d2565b0390fd5b5061117161116b888390611747565b1561029f565b61111f565b906111919161118c611187826110b0565b611bc0565b611193565b565b9061119d91611c19565b50565b906111aa91611176565b565b90806111c76111c16111bc611ad0565b610172565b91610172565b036111d8576111d591611cc8565b50565b6111e0610152565b63334bd91960e11b8152806111f760048201610696565b0390fd5b606090565b5190565b91602061122692949361121f604082019660008301906101f7565b01906101f7565b565b9061123a611235836104cd565b6104b8565b918252565b369037565b9061126961125183611228565b9260208061125f86936104cd565b920191039061123f565b565b61127f61127a61128492610a27565b610f5a565b6101a2565b90565b600161129391016101a2565b90565b634e487b7160e01b600052603260045260246000fd5b906112b68261085e565b8110156112c7576020809102010190565b611296565b906112d6906101a2565b9052565b906112e36111fb565b506112ed82611200565b6113076113016112fc8461085e565b6101a2565b916101a2565b036113925761131d61131883611200565b611244565b91611328600061126b565b5b8061134461133e61133985611200565b6101a2565b916101a2565b101561138c576113879061138261137061135f858490611d6e565b61136a878590611d84565b90611007565b61137d87918490926112ac565b6112cc565b611287565b611329565b50505090565b61139e6113a49161085e565b91611200565b906113c66113b0610152565b928392635b05999160e01b845260048401611204565b0390fd5b6113d261102f565b506113ec6113e66113e16113f5565b610172565b91610172565b1490565b600090565b6113fd6113f0565b507f000000000000000000000000000000000000000000000000000000000000000090565b9061142c90610fb9565b600052602052604060002090565b60ff1690565b61144c61145191610fdd565b61143a565b90565b61145e9054611440565b90565b61148991600061147e6114849361147661102f565b506005611074565b01611422565b611454565b90565b6114a091611498611ad0565b919091611d9a565b565b939291906114c86114c26114b4610e45565b6114bc611ad0565b90611461565b1561029f565b6114d8576114d59461156f565b90565b6114e0610152565b63db98489760e01b8152806114f760048201610696565b0390fd5b5190565b9061151161150c8361056e565b6104b8565b918252565b369037565b90611540611528836114ff565b92602080611536869361056e565b9201910390611516565b565b61154c90516101a2565b90565b90611559826114fb565b81101561156a576020809102010190565b611296565b94919293945061157e856114fb565b936115888461085e565b61159a611594876101a2565b916101a2565b03611621576115bd9190846115b76115b2600061126b565b61151b565b92611e5b565b6115c7600061126b565b5b806115db6115d5866101a2565b916101a2565b1015611617576116129061160d6115fb6115f68684906112ac565b611542565b61160688849061154f565b51906120b6565b611287565b6115c8565b5092505050600190565b611629610152565b6223d71f60e21b81528061163f60048201610696565b0390fd5b9061165793929161165261102f565b6114a2565b90565b9392919061168061167a61166c610e45565b611674611ad0565b90611461565b1561029f565b6116905761168d946116b3565b90565b611698610152565b63db98489760e01b8152806116af60048201610696565b0390fd5b926116d8916116dd95945090836116d26116cd600061126b565b61151b565b9261211a565b6120b6565b600190565b906116f69392916116f161102f565b61165a565b90565b906117149161170f61170a826110b0565b611bc0565b611716565b565b9061172091611cc8565b50565b9061172d916116f9565b565b9061173990610fb9565b600052602052604060002090565b61176c916117626117679261175a61102f565b50600161172f565b611422565b611454565b90565b94939192909261177d611ad0565b8661179061178a83610172565b91610172565b1415806117d5575b6117ae57506117ac94959390919293612191565b565b86906117d16117bb610152565b92839263711bec9160e11b8452600484016110d2565b0390fd5b506117ea6117e4888390611747565b1561029f565b611798565b6117f761102f565b508061181261180c637965db0b60e01b610250565b91610250565b1490811561181f575b5090565b611829915061224e565b3861181b565b9061183990610f5d565b600052602052604060002090565b634e487b7160e01b600052602260045260246000fd5b906001600283049216801561187d575b602083101461187857565b611847565b91607f169161186d565b60209181520190565b600052602060002090565b90600092918054906118b66118af8361185d565b8094611887565b9160018116908160001461190f57506001146118d2575b505050565b6118df9192939450611890565b916000925b8184106118f757505001903880806118cd565b600181602092959395548486015201910192906118e4565b92949550505060ff19168252151560200201903880806118cd565b906119349161189b565b90565b9061195761195092611947610152565b9384809261192a565b038361048f565b565b61196290611937565b90565b90565b5190565b905090565b906000929180549061198c6119858361185d565b809461196c565b916001811690816000146119e057506001146119a8575b505050565b6119b59192939450611890565b6000905b8382106119cc57505001903880806119a3565b6001816020925484860152019101906119b9565b92949550505060ff191682528015150201903880806119a3565b611a1f611a1692602092611a0d8161031b565b9485809361196c565b93849101610328565b0190565b611a3190611a379392611971565b906119fa565b90565b611a599291611a6591611a4b610152565b948592602084019283611a23565b9081038252038361048f565b565b611a6f611049565b50611a84611a7f6004839061182f565b611959565b90611a96611a9183611965565b611968565b611aa9611aa3600061126b565b916101a2565b11600014611ac15750611abd906003611a3a565b5b90565b611acb91506122b6565b611abe565b611ad86113f0565b50611ae16122f0565b90565b611af8611af3611afd92610a27565b610f5a565b610167565b90565b611b0990611ae4565b90565b939192909283611b2d611b27611b226000611b00565b610172565b91610172565b14611b915784611b4e611b48611b436000611b00565b610172565b91610172565b14611b6357611b6194939091929361236b565b565b611b8d611b706000611b00565b611b78610152565b918291626a0d4560e21b8352600483016109a6565b0390fd5b611bbc611b9e6000611b00565b611ba6610152565b918291632bfa23e760e11b8352600483016109a6565b0390fd5b611bd290611bcc611ad0565b9061244f565b565b90611be060ff91610a2a565b9181191691161790565b611bf39061029f565b90565b90565b90611c0e611c09611c1592611bea565b611bf6565b8254611bd4565b9055565b611c2161102f565b50611c36611c30828490611461565b1561029f565b600014611cc157611c606001611c5b6000611c5360058690611074565b018590611422565b611bf9565b90611c69611ad0565b90611ca6611ca0611c9a7f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d95611068565b92610fb9565b92610fb9565b92611caf610152565b80611cb981610696565b0390a4600190565b5050600090565b611cd061102f565b50611cdc818390611461565b600014611d6757611d066000611d016000611cf960058690611074565b018590611422565b611bf9565b90611d0f611ad0565b90611d4c611d46611d407ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b95611068565b92610fb9565b92610fb9565b92611d55610152565b80611d5f81610696565b0390a4600190565b5050600090565b9060208091611d7b6113f0565b50029101015190565b9060208091611d91610f55565b50029101015190565b91909182611db9611db3611dae6000611b00565b610172565b91610172565b14611e2d57611ddd82611dd8611dd16001859061172f565b8690611422565b611bf9565b919091611e28611e16611e107f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3193610fb9565b93610fb9565b93611e1f610152565b918291826102b1565b0390a3565b611e57611e3a6000611b00565b611e42610152565b91829162ced3e160e81b8352600483016109a6565b0390fd5b9192909282611e7b611e75611e706000611b00565b610172565b91610172565b14611e9a57611e9893611e8e6000611b00565b939091929361236b565b565b611ec5611ea76000611b00565b611eaf610152565b918291632bfa23e760e11b8352600483016109a6565b0390fd5b601f602091010490565b1b90565b91906008611ef3910291611eed60001984611ed3565b92611ed3565b9181191691161790565b90565b9190611f16611f11611f1e93610f5d565b611efd565b908354611ed7565b9055565b611f3491611f2e610f55565b91611f00565b565b5b818110611f42575050565b80611f506000600193611f22565b01611f37565b9190601f8111611f66575b505050565b611f72611f9793611890565b906020611f7e84611ec9565b83019310611f9f575b611f9090611ec9565b0190611f36565b388080611f61565b9150611f9081929050611f87565b1c90565b90611fc29060001990600802611fad565b191690565b81611fd191611fb1565b906002021790565b90611fe38161031b565b9067ffffffffffffffff82116120a55761200782612001855461185d565b85611f56565b602090601f831160011461203c5791809161202b93600092612030575b5050611fc7565b90555b565b90915001513880612024565b601f1983169161204b85611890565b9260005b81811061208d57509160029391856001969410612073575b5050500201905561202e565b612083910151601f841690611fb1565b9055388080612067565b9193602060018192878701518155019501920161204f565b610479565b906120b491611fd9565b565b906120cc906120c76004849061182f565b6120aa565b6120d58161104e565b906121156121037f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b92610f5d565b9261210c610152565b91829182610388565b0390a2565b9192908261213961213361212e6000611b00565b610172565b91610172565b14612162576121609361214b91612491565b906121566000611b00565b939091929361236b565b565b61218d61216f6000611b00565b612177610152565b918291632bfa23e760e11b8352600483016109a6565b0390fd5b90929391836121b16121ab6121a66000611b00565b610172565b91610172565b1461221f57816121d26121cc6121c76000611b00565b610172565b91610172565b146121f1576121ef946121e491612491565b91939091929361236b565b565b61221b6121fe6000611b00565b612206610152565b918291626a0d4560e21b8352600483016109a6565b0390fd5b61224a61222c6000611b00565b612234610152565b918291632bfa23e760e11b8352600483016109a6565b0390fd5b61225661102f565b508061227161226b636cdb3d1360e11b610250565b91610250565b148015612295575b908115612285575b5090565b61228f91506124c8565b38612281565b50806122b06122aa6303a24d0760e21b610250565b91610250565b14612279565b506122bf611049565b506122ca6002611959565b90565b5090565b90565b6122e86122e36122ed926122d1565b610f5a565b6101a2565b90565b6122f86113f0565b50612302336113ca565b80612325575b60001461231a57601436033560601c90565b6123226124ee565b90565b50612332600036906122cd565b61234561233f60146122d4565b916101a2565b1015612308565b90565b61236361235e6123689261234c565b610f5a565b6101a2565b90565b9293919361237d8483879084926125e6565b8161239961239361238e6000611b00565b610172565b91610172565b036123a6575b5050505050565b6123ae611ad0565b916123b88661085e565b6123cb6123c5600161234f565b916101a2565b14600014612415576123fe6123ed61240a976123e7600061126b565b90611d84565b926123f8600061126b565b90611d84565b92949091929394612baa565b5b388080808061239f565b6124269591929490919293946129e5565b61240b565b91602061244d92949361244660408201966000830190610999565b019061041c565b565b9061246461245e838390611461565b1561029f565b61246c575050565b61248d612477610152565b92839263e2517d3f60e01b84526004840161242b565b0390fd5b9161249a6111fb565b506124a36111fb565b5060405192600184526020840152604083019160018352602083015260408201604052565b6124d061102f565b506124ea6124e46301ffc9a760e01b610250565b91610250565b1490565b6124f66113f0565b503390565b6125316125389461252760609498979561251d608086019a6000870190610999565b60208501906101f7565b60408301906101f7565b01906101f7565b565b9061254591036101a2565b90565b9061255560001991610a2a565b9181191691161790565b9061257461256f61257b92610f5d565b611efd565b8254612548565b9055565b634e487b7160e01b600052601160045260246000fd5b6125a46125aa919392936101a2565b926101a2565b82018092116125b557565b61257f565b90916125d56125e39360408401908482036000860152610895565b916020818403910152610895565b90565b939290916125f38161085e565b61260d6126076126028561085e565b6101a2565b916101a2565b036128915761261a611ad0565b93612625600061126b565b5b8061264161263b6126368661085e565b6101a2565b916101a2565b101561278457612652838290611d84565b61265d858390611d84565b908861267a61267461266f6000611b00565b610172565b91610172565b036126ec575b906126af9291876126a261269c6126976000611b00565b610172565b91610172565b036126b4575b5050611287565b612626565b6126df6126d06126c96126e594936000610f79565b8a90610fc5565b916126da83610ffa565b612595565b9061255f565b38806126a8565b61270a6127056126fe60008490610f79565b8b90610fc5565b610ffa565b8061271d612717856101a2565b916101a2565b1061275a57906127516127366126af959493849061253a565b61274c61274560008590610f79565b8d90610fc5565b61255f565b90919250612680565b90612780908a929361276a610152565b9485946303dee4c560e01b8652600486016124fb565b0390fd5b5094909291926127938161085e565b6127a66127a0600161234f565b916101a2565b14600014612832576127c56127d6916127bf600061126b565b90611d84565b936127d0600061126b565b90611d84565b939091929361281761281161280b7fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6294610fb9565b94610fb9565b94610fb9565b9461282c612823610152565b92839283611204565b0390a45b565b92939091929361287461286e6128687f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb94610fb9565b94610fb9565b94610fb9565b94612889612880610152565b928392836125ba565b0390a4612830565b61289d6128a39161085e565b9161085e565b906128c56128af610152565b928392635b05999160e01b845260048401611204565b0390fd5b6128d290610f91565b90565b6128de906128c9565b90565b6128ea90610fad565b90565b60e01b90565b905051906129008261025c565b565b9060208282031261291c57612919916000016128f3565b90565b61015d565b60209181520190565b6129496129526020936129579361294081611968565b93848093612921565b95869101610328565b61034d565b0190565b9390612996906129b296946129896129a49561297f60a08a019460008b0190610999565b6020890190610999565b8682036040880152610895565b908482036060860152610895565b91608081840391015261292a565b90565b606090565b3d6000146129d7576129cb3d6114ff565b903d6000602084013e5b565b6129df6129b5565b906129d5565b94909194939293853b612a016129fb600061126b565b916101a2565b11612a0f575b505050505050565b6000612a4c91612a57602096612a2c612a278b6128d5565b6128e1565b9563bc197c81939799919091612a40610152565b9a8b998a9889976128ed565b87526004870161295b565b03925af18091600092612b28575b5015600014612ade57506001612a8257505b388080808080612a07565b612a8a6129ba565b90612a9482611968565b612aa7612aa1600061126b565b916101a2565b14600014612ad557612ad190612abb610152565b918291632bfa23e760e11b8352600483016109a6565b0390fd5b50805190602001fd5b612af7612af163bc197c8160e01b610250565b91610250565b03612b025750612a77565b612b2490612b0e610152565b918291632bfa23e760e11b8352600483016109a6565b0390fd5b612b4a91925060203d8111612b51575b612b42818361048f565b810190612902565b9038612a65565b503d612b38565b9193612b90612ba79694612b86612b9a9497612b7c60a08801996000890190610999565b6020870190610999565b60408501906101f7565b60608301906101f7565b608081840391015261292a565b90565b94909194939293853b612bc6612bc0600061126b565b916101a2565b11612bd4575b505050505050565b6000612c1191612c1c602096612bf1612bec8b6128d5565b6128e1565b9563f23a6e61939799919091612c05610152565b9a8b998a9889976128ed565b875260048701612b58565b03925af18091600092612ced575b5015600014612ca357506001612c4757505b388080808080612bcc565b612c4f6129ba565b90612c5982611968565b612c6c612c66600061126b565b916101a2565b14600014612c9a57612c9690612c80610152565b918291632bfa23e760e11b8352600483016109a6565b0390fd5b50805190602001fd5b612cbc612cb663f23a6e6160e01b610250565b91610250565b03612cc75750612c3c565b612ce990612cd3610152565b918291632bfa23e760e11b8352600483016109a6565b0390fd5b612d0f91925060203d8111612d16575b612d07818361048f565b810190612902565b9038612c2a565b503d612cfd56fea264697066735822122041697a3a4e9a118ac9b3125dacad669e9439a517004ce4295cad91f8c85593e764736f6c63430008160033";
        public BlockRacersAssetsDeploymentBase() : base(BYTECODE) { }
        public BlockRacersAssetsDeploymentBase(string byteCode) : base(byteCode) { }
        [Parameter("address", "trustedForwarder", 1)]
        public virtual string TrustedForwarder { get; set; }
        [Parameter("string", "baseUri_", 2)]
        public virtual string Baseuri { get; set; }
        [Parameter("address", "_admin", 3)]
        public virtual string Admin { get; set; }
    }

    public partial class BlockRacersFunction : BlockRacersFunctionBase { }

    [Function("BLOCK_RACERS", "bytes32")]
    public class BlockRacersFunctionBase : FunctionMessage
    {

    }

    public partial class DefaultAdminRoleFunction : DefaultAdminRoleFunctionBase { }

    [Function("DEFAULT_ADMIN_ROLE", "bytes32")]
    public class DefaultAdminRoleFunctionBase : FunctionMessage
    {

    }

    public partial class BalanceOfFunction : BalanceOfFunctionBase { }

    [Function("balanceOf", "uint256")]
    public class BalanceOfFunctionBase : FunctionMessage
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
        [Parameter("uint256", "id", 2)]
        public virtual BigInteger Id { get; set; }
    }

    public partial class BalanceOfBatchFunction : BalanceOfBatchFunctionBase { }

    [Function("balanceOfBatch", "uint256[]")]
    public class BalanceOfBatchFunctionBase : FunctionMessage
    {
        [Parameter("address[]", "accounts", 1)]
        public virtual List<string> Accounts { get; set; }
        [Parameter("uint256[]", "ids", 2)]
        public virtual List<BigInteger> Ids { get; set; }
    }

    public partial class GetRoleAdminFunction : GetRoleAdminFunctionBase { }

    [Function("getRoleAdmin", "bytes32")]
    public class GetRoleAdminFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "role", 1)]
        public virtual byte[] Role { get; set; }
    }

    public partial class GrantRoleFunction : GrantRoleFunctionBase { }

    [Function("grantRole")]
    public class GrantRoleFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "role", 1)]
        public virtual byte[] Role { get; set; }
        [Parameter("address", "account", 2)]
        public virtual string Account { get; set; }
    }

    public partial class HasRoleFunction : HasRoleFunctionBase { }

    [Function("hasRole", "bool")]
    public class HasRoleFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "role", 1)]
        public virtual byte[] Role { get; set; }
        [Parameter("address", "account", 2)]
        public virtual string Account { get; set; }
    }

    public partial class IsApprovedForAllFunction : IsApprovedForAllFunctionBase { }

    [Function("isApprovedForAll", "bool")]
    public class IsApprovedForAllFunctionBase : FunctionMessage
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
        [Parameter("address", "operator", 2)]
        public virtual string Operator { get; set; }
    }

    public partial class IsTrustedForwarderFunction : IsTrustedForwarderFunctionBase { }

    [Function("isTrustedForwarder", "bool")]
    public class IsTrustedForwarderFunctionBase : FunctionMessage
    {
        [Parameter("address", "forwarder", 1)]
        public virtual string Forwarder { get; set; }
    }

    public partial class MintFunction : MintFunctionBase { }

    [Function("mint", "bool")]
    public class MintFunctionBase : FunctionMessage
    {
        [Parameter("address", "to", 1)]
        public virtual string To { get; set; }
        [Parameter("uint256", "id", 2)]
        public virtual BigInteger Id { get; set; }
        [Parameter("uint256", "value", 3)]
        public virtual BigInteger Value { get; set; }
        [Parameter("string", "newUri", 4)]
        public virtual string NewUri { get; set; }
    }

    public partial class MintBatchFunction : MintBatchFunctionBase { }

    [Function("mintBatch", "bool")]
    public class MintBatchFunctionBase : FunctionMessage
    {
        [Parameter("address", "to", 1)]
        public virtual string To { get; set; }
        [Parameter("uint256[]", "ids", 2)]
        public virtual List<BigInteger> Ids { get; set; }
        [Parameter("uint256[]", "values", 3)]
        public virtual List<BigInteger> Values { get; set; }
        [Parameter("string[]", "uriList", 4)]
        public virtual List<string> UriList { get; set; }
    }

    public partial class RenounceRoleFunction : RenounceRoleFunctionBase { }

    [Function("renounceRole")]
    public class RenounceRoleFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "role", 1)]
        public virtual byte[] Role { get; set; }
        [Parameter("address", "callerConfirmation", 2)]
        public virtual string CallerConfirmation { get; set; }
    }

    public partial class RevokeRoleFunction : RevokeRoleFunctionBase { }

    [Function("revokeRole")]
    public class RevokeRoleFunctionBase : FunctionMessage
    {
        [Parameter("bytes32", "role", 1)]
        public virtual byte[] Role { get; set; }
        [Parameter("address", "account", 2)]
        public virtual string Account { get; set; }
    }

    public partial class SafeBatchTransferFromFunction : SafeBatchTransferFromFunctionBase { }

    [Function("safeBatchTransferFrom")]
    public class SafeBatchTransferFromFunctionBase : FunctionMessage
    {
        [Parameter("address", "from", 1)]
        public virtual string From { get; set; }
        [Parameter("address", "to", 2)]
        public virtual string To { get; set; }
        [Parameter("uint256[]", "ids", 3)]
        public virtual List<BigInteger> Ids { get; set; }
        [Parameter("uint256[]", "values", 4)]
        public virtual List<BigInteger> Values { get; set; }
        [Parameter("bytes", "data", 5)]
        public virtual byte[] Data { get; set; }
    }

    public partial class SafeTransferFromFunction : SafeTransferFromFunctionBase { }

    [Function("safeTransferFrom")]
    public class SafeTransferFromFunctionBase : FunctionMessage
    {
        [Parameter("address", "from", 1)]
        public virtual string From { get; set; }
        [Parameter("address", "to", 2)]
        public virtual string To { get; set; }
        [Parameter("uint256", "id", 3)]
        public virtual BigInteger Id { get; set; }
        [Parameter("uint256", "value", 4)]
        public virtual BigInteger Value { get; set; }
        [Parameter("bytes", "data", 5)]
        public virtual byte[] Data { get; set; }
    }

    public partial class SetApprovalForAllFunction : SetApprovalForAllFunctionBase { }

    [Function("setApprovalForAll")]
    public class SetApprovalForAllFunctionBase : FunctionMessage
    {
        [Parameter("address", "operator", 1)]
        public virtual string Operator { get; set; }
        [Parameter("bool", "approved", 2)]
        public virtual bool Approved { get; set; }
    }

    public partial class SupportsInterfaceFunction : SupportsInterfaceFunctionBase { }

    [Function("supportsInterface", "bool")]
    public class SupportsInterfaceFunctionBase : FunctionMessage
    {
        [Parameter("bytes4", "interfaceId", 1)]
        public virtual byte[] InterfaceId { get; set; }
    }

    public partial class TrustedForwarderFunction : TrustedForwarderFunctionBase { }

    [Function("trustedForwarder", "address")]
    public class TrustedForwarderFunctionBase : FunctionMessage
    {

    }

    public partial class UriFunction : UriFunctionBase { }

    [Function("uri", "string")]
    public class UriFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "tokenId", 1)]
        public virtual BigInteger TokenId { get; set; }
    }

    public partial class ApprovalForAllEventDTO : ApprovalForAllEventDTOBase { }

    [Event("ApprovalForAll")]
    public class ApprovalForAllEventDTOBase : IEventDTO
    {
        [Parameter("address", "account", 1, true )]
        public virtual string Account { get; set; }
        [Parameter("address", "operator", 2, true )]
        public virtual string Operator { get; set; }
        [Parameter("bool", "approved", 3, false )]
        public virtual bool Approved { get; set; }
    }

    public partial class RoleAdminChangedEventDTO : RoleAdminChangedEventDTOBase { }

    [Event("RoleAdminChanged")]
    public class RoleAdminChangedEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "role", 1, true )]
        public virtual byte[] Role { get; set; }
        [Parameter("bytes32", "previousAdminRole", 2, true )]
        public virtual byte[] PreviousAdminRole { get; set; }
        [Parameter("bytes32", "newAdminRole", 3, true )]
        public virtual byte[] NewAdminRole { get; set; }
    }

    public partial class RoleGrantedEventDTO : RoleGrantedEventDTOBase { }

    [Event("RoleGranted")]
    public class RoleGrantedEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "role", 1, true )]
        public virtual byte[] Role { get; set; }
        [Parameter("address", "account", 2, true )]
        public virtual string Account { get; set; }
        [Parameter("address", "sender", 3, true )]
        public virtual string Sender { get; set; }
    }

    public partial class RoleRevokedEventDTO : RoleRevokedEventDTOBase { }

    [Event("RoleRevoked")]
    public class RoleRevokedEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "role", 1, true )]
        public virtual byte[] Role { get; set; }
        [Parameter("address", "account", 2, true )]
        public virtual string Account { get; set; }
        [Parameter("address", "sender", 3, true )]
        public virtual string Sender { get; set; }
    }

    public partial class TransferBatchEventDTO : TransferBatchEventDTOBase { }

    [Event("TransferBatch")]
    public class TransferBatchEventDTOBase : IEventDTO
    {
        [Parameter("address", "operator", 1, true )]
        public virtual string Operator { get; set; }
        [Parameter("address", "from", 2, true )]
        public virtual string From { get; set; }
        [Parameter("address", "to", 3, true )]
        public virtual string To { get; set; }
        [Parameter("uint256[]", "ids", 4, false )]
        public virtual List<BigInteger> Ids { get; set; }
        [Parameter("uint256[]", "values", 5, false )]
        public virtual List<BigInteger> Values { get; set; }
    }

    public partial class TransferSingleEventDTO : TransferSingleEventDTOBase { }

    [Event("TransferSingle")]
    public class TransferSingleEventDTOBase : IEventDTO
    {
        [Parameter("address", "operator", 1, true )]
        public virtual string Operator { get; set; }
        [Parameter("address", "from", 2, true )]
        public virtual string From { get; set; }
        [Parameter("address", "to", 3, true )]
        public virtual string To { get; set; }
        [Parameter("uint256", "id", 4, false )]
        public virtual BigInteger Id { get; set; }
        [Parameter("uint256", "value", 5, false )]
        public virtual BigInteger Value { get; set; }
    }

    public partial class UriEventDTO : UriEventDTOBase { }

    [Event("URI")]
    public class UriEventDTOBase : IEventDTO
    {
        [Parameter("string", "value", 1, false )]
        public virtual string Value { get; set; }
        [Parameter("uint256", "id", 2, true )]
        public virtual BigInteger Id { get; set; }
    }

    public partial class AccessControlBadConfirmationError : AccessControlBadConfirmationErrorBase { }
    [Error("AccessControlBadConfirmation")]
    public class AccessControlBadConfirmationErrorBase : IErrorDTO
    {
    }

    public partial class AccessControlUnauthorizedAccountError : AccessControlUnauthorizedAccountErrorBase { }

    [Error("AccessControlUnauthorizedAccount")]
    public class AccessControlUnauthorizedAccountErrorBase : IErrorDTO
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
        [Parameter("bytes32", "neededRole", 2)]
        public virtual byte[] NeededRole { get; set; }
    }

    public partial class ERC1155InsufficientBalanceError : ERC1155InsufficientBalanceErrorBase { }

    [Error("ERC1155InsufficientBalance")]
    public class ERC1155InsufficientBalanceErrorBase : IErrorDTO
    {
        [Parameter("address", "sender", 1)]
        public virtual string Sender { get; set; }
        [Parameter("uint256", "balance", 2)]
        public virtual BigInteger Balance { get; set; }
        [Parameter("uint256", "needed", 3)]
        public virtual BigInteger Needed { get; set; }
        [Parameter("uint256", "tokenId", 4)]
        public virtual BigInteger TokenId { get; set; }
    }

    public partial class ERC1155InvalidApproverError : ERC1155InvalidApproverErrorBase { }

    [Error("ERC1155InvalidApprover")]
    public class ERC1155InvalidApproverErrorBase : IErrorDTO
    {
        [Parameter("address", "approver", 1)]
        public virtual string Approver { get; set; }
    }

    public partial class ERC1155InvalidArrayLengthError : ERC1155InvalidArrayLengthErrorBase { }

    [Error("ERC1155InvalidArrayLength")]
    public class ERC1155InvalidArrayLengthErrorBase : IErrorDTO
    {
        [Parameter("uint256", "idsLength", 1)]
        public virtual BigInteger IdsLength { get; set; }
        [Parameter("uint256", "valuesLength", 2)]
        public virtual BigInteger ValuesLength { get; set; }
    }

    public partial class ERC1155InvalidOperatorError : ERC1155InvalidOperatorErrorBase { }

    [Error("ERC1155InvalidOperator")]
    public class ERC1155InvalidOperatorErrorBase : IErrorDTO
    {
        [Parameter("address", "operator", 1)]
        public virtual string Operator { get; set; }
    }

    public partial class ERC1155InvalidReceiverError : ERC1155InvalidReceiverErrorBase { }

    [Error("ERC1155InvalidReceiver")]
    public class ERC1155InvalidReceiverErrorBase : IErrorDTO
    {
        [Parameter("address", "receiver", 1)]
        public virtual string Receiver { get; set; }
    }

    public partial class ERC1155InvalidSenderError : ERC1155InvalidSenderErrorBase { }

    [Error("ERC1155InvalidSender")]
    public class ERC1155InvalidSenderErrorBase : IErrorDTO
    {
        [Parameter("address", "sender", 1)]
        public virtual string Sender { get; set; }
    }

    public partial class ERC1155MissingApprovalForAllError : ERC1155MissingApprovalForAllErrorBase { }

    [Error("ERC1155MissingApprovalForAll")]
    public class ERC1155MissingApprovalForAllErrorBase : IErrorDTO
    {
        [Parameter("address", "operator", 1)]
        public virtual string Operator { get; set; }
        [Parameter("address", "owner", 2)]
        public virtual string Owner { get; set; }
    }

    public partial class NotAuthorizedGameContractError : NotAuthorizedGameContractErrorBase { }
    [Error("NotAuthorizedGameContract")]
    public class NotAuthorizedGameContractErrorBase : IErrorDTO
    {
    }

    public partial class ReentrancyGuardReentrantCallError : ReentrancyGuardReentrantCallErrorBase { }
    [Error("ReentrancyGuardReentrantCall")]
    public class ReentrancyGuardReentrantCallErrorBase : IErrorDTO
    {
    }

    public partial class UriArrayLengthInvalidError : UriArrayLengthInvalidErrorBase { }
    [Error("UriArrayLengthInvalid")]
    public class UriArrayLengthInvalidErrorBase : IErrorDTO
    {
    }

    public partial class BlockRacersOutputDTO : BlockRacersOutputDTOBase { }

    [FunctionOutput]
    public class BlockRacersOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bytes32", "", 1)]
        public virtual byte[] ReturnValue1 { get; set; }
    }

    public partial class DefaultAdminRoleOutputDTO : DefaultAdminRoleOutputDTOBase { }

    [FunctionOutput]
    public class DefaultAdminRoleOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bytes32", "", 1)]
        public virtual byte[] ReturnValue1 { get; set; }
    }

    public partial class BalanceOfOutputDTO : BalanceOfOutputDTOBase { }

    [FunctionOutput]
    public class BalanceOfOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class BalanceOfBatchOutputDTO : BalanceOfBatchOutputDTOBase { }

    [FunctionOutput]
    public class BalanceOfBatchOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256[]", "", 1)]
        public virtual List<BigInteger> ReturnValue1 { get; set; }
    }

    public partial class GetRoleAdminOutputDTO : GetRoleAdminOutputDTOBase { }

    [FunctionOutput]
    public class GetRoleAdminOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bytes32", "", 1)]
        public virtual byte[] ReturnValue1 { get; set; }
    }



    public partial class HasRoleOutputDTO : HasRoleOutputDTOBase { }

    [FunctionOutput]
    public class HasRoleOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class IsApprovedForAllOutputDTO : IsApprovedForAllOutputDTOBase { }

    [FunctionOutput]
    public class IsApprovedForAllOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class IsTrustedForwarderOutputDTO : IsTrustedForwarderOutputDTOBase { }

    [FunctionOutput]
    public class IsTrustedForwarderOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }















    public partial class SupportsInterfaceOutputDTO : SupportsInterfaceOutputDTOBase { }

    [FunctionOutput]
    public class SupportsInterfaceOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class TrustedForwarderOutputDTO : TrustedForwarderOutputDTOBase { }

    [FunctionOutput]
    public class TrustedForwarderOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class UriOutputDTO : UriOutputDTOBase { }

    [FunctionOutput]
    public class UriOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("string", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }
}
